[
 {
    "name": "LowRes Galaxy",
    "sourceCode": "REM ********************\nREM LOWRES GALAXY 1.1\nREM BY TIMO KLOSS\nREM SPACE SHOOTER GAME\nREM ********************\n\nREM READ SPRITE DATA\nDIM ARR(15)\nFOR J=0 TO 4\n  FOR I=0 TO 15\n    READ ARR(I)\n  NEXT I\n  DEF SPRITE J,ARR\nNEXT J\n\nREM SET SPRITE COLORS\nFOR I=1 TO 4\n  SPRITE PALETTE I,8,7,6\nNEXT I\nFOR I=9 TO 15\n  SPRITE PALETTE I,7\nNEXT I\n\nREM MELODY\nDEF SOUND 0,1,0.5,0\nDEF SOUND LINE 0,0.1,2,0\nREM LASER\nDEF SOUND 1,2,0.05,0\nDEF SOUND LINE 1,0.2,24,1.0\nREM EXPLO\nDEF SOUND 2,3,0.5,0\nDEF SOUND LINE 2,0.5,41,0\nREM ALIEN LASER\nDEF SOUND 3,1,0.5,0\nDEF SOUND LINE 3,0.5,-24,0\n\nREM TITLE SONG SOUNDS\nDEF SOUND 11,0\nDEF SOUND LINE 11,0.05,12,0\nDEF SOUND 12,1,0,0.1\nDEF SOUND LINE 12,0.025,12,0\nDEF SOUND 13,2,0.2\nDEF SOUND LINE 13,1,0,0.8\nDEF SOUND 14,3,0,0.1\nDEF SOUND LINE 14,0.1,24,0\nDEF SOUND 15,2,0.5,0.1\nDEF SOUND LINE 15,0.1,36,0\n\nDIM ALN(3,1),BUL(7,1)\nDIM NT(2,2)\n\nREM TITLE SCREEN\n\nSTART:\nGAMEPAD 0\nLAYER 1\nCLS 0\nT$=\"LOWRES GALAXY\"\nCOLOR 5\nTEXT 30,29,T$,1\nTEXT 32,29,T$,1\nTEXT 31,28,T$,1\nTEXT 31,30,T$,1\nCOLOR 4\nTEXT 31,29,T$,1\nLAYER 0\nA=0\nRESTORE MUSIC\nGOSUB PLAYSONG\nREPEAT\n  GOSUB BGSCROLL\n  LAYER 1\n  IF A MOD 20<10 THEN COLOR 1 ELSE COLOR 3\n  TEXT 31,57,\"PRESS BUTTON\",1\n  A=A+1\n  LAYER 0\n  WAIT 0.05\nUNTIL BUTTON TAP(0)\nSOUND OFF\n\nREM GAME INIT\n\nLIV=5\nLEV=1\nSCO=0\nLTI=0\n\nGOSUB HUD\nFOR I=0 TO 3\n  GOSUB INIALIEN\nNEXT I\nGOSUB INISHIP\nGOSUB SNDLEVEL\nGAMEPAD 1\n\nDO\n  REM CHECK LEVEL UP\n  IF LTI>=10 THEN\n    LEV=LEV+1\n    LTI=0\n    COLOR 15\n    TEXT 32,0,\"LEVEL \"+LEV,1\n    GOSUB SNDLEVEL\n  END IF\n\n  REM PLAYER'S SHIP\n  IF CRA>0 THEN\n    REM CRASH EFFECT\n    CRA=CRA+1\n    SPRITE PALETTE 0,RND*16,RND*16,RND*16\n    IF CRA=16 THEN\n      LIV=LIV-1\n      GOSUB HUD\n      IF LIV=0 THEN EXIT ELSE GOSUB INISHIP\n    END IF\n  ELSE\n    REM SHIP CONTROL\n    IF LEFT(0) AND SX>0 THEN SX=SX-1\n    IF RIGHT(0) AND SX<63-5 THEN SX=SX+1\n    IF UP(0) AND SY>0 THEN SY=SY-1\n    IF DOWN(0) AND SY<63-7 THEN SY=SY+1\n    SPRITE PALETTE 0,,RND*16\n    IF CRA<0 THEN CRA=CRA+1\n  END IF\n\n  REM FLICKER SHIP IF PLAYER HAS SHIELD\n  IF CRA>=0 OR CRA MOD 2=0 THEN\n    SPRITE 0,SX,SY\n  ELSE\n    SPRITE OFF 0\n  END IF\n\n  REM PLAYER SHOOTING\n  IF BUTTON TAP(0) AND CRA<=0 THEN\n    SPRITE 1+LI,SX+2+RND*2,SY,1\n    LI=(LI+1)MOD 4\n    SOUND 1,38,2,1\n  END IF\n\n  REM MOVE PLAYER'S LASERS\n  FOR I=1 TO 4\n    IF SPRITE I(I)<>-1 THEN SPRITE I,,SPRITE Y(I)-4\n  NEXT I\n\n  REM UPDATE ALIENS\n  FOR I=0 TO 3\n    X=SPRITE X(5+I)\n    Y=SPRITE Y(5+I)\n    IF ALN(I,0)<0 THEN\n      REM CRASH EFFECT\n      SPRITE PALETTE 5+I,RND*16,RND*16,RND*16\n      ALN(I,0)=ALN(I,0)-1\n      IF ALN(I,0)=-8 THEN GOSUB INIALIEN\n    ELSE IF SPRITE HIT(5+I,1 TO 4) THEN\n      REM HIT BY LASER\n      ALN(I,0)=-1\n      SPRITE 5+I,X-2,Y-2,3\n      SOUND 0,20,5,2\n      SCO=SCO+40+10*LEV\n      GOSUB HUD\n      SPRITE OFF HIT\n    ELSE\n      REM MOVE\n      IF ALN(I,0) MOD 8 = 7 THEN ALN(I,1)=INT(RND*3)\n      ALN(I,0)=ALN(I,0)+1\n      D=ALN(I,1)\n      IF D=0 AND Y>=64 THEN D=-1\n      IF D=1 AND X<=0 THEN D=2\n      IF D=2 AND X>=59 THEN D=1\n      IF D=0 THEN\n        Y=Y+1\n      ELSE IF D=1 THEN\n        X=X-1\n      ELSE IF D=2 THEN\n        X=X+1\n      END IF\n      SPRITE 5+I,X,Y,2\n      IF D=-1 THEN GOSUB INIALIEN ELSE ALN(I,1)=D\n\n      REM ALIEN SHOOTING\n      R=60-LEV\n      IF R<20 THEN R=20\n      IF Y<32 AND ALN(I,0) MOD R=0 THEN\n        SPRITE 9+BI,X+1,Y+2,4\n        U=SX-X\n        V=SY-Y\n        W=SQR(U*U+V*V)\/2\n        BUL(BI,0)=U\/W\n        BUL(BI,1)=V\/W\n        BI=(BI+1)MOD 7\n        SOUND 2,84,3,3\n      END IF\n    END IF\n  NEXT I\n\n  REM MOVE ALIENS' BULLETS\n  FOR I=0 TO 6\n    IF BUL(I,1)<>0 THEN\n      J=9+I\n      SPRITE J,SPRITE X(J)+BUL(I,0),SPRITE Y(J)+BUL(I,1)\n    END IF\n  NEXT I\n\n  REM CHECK PLAYER COLLISION\n  IF SPRITE HIT(0,5 TO 15) AND CRA=0 THEN\n    CRA=1\n    SOUND 0,36,20,2\n    SPRITE 0,,,3\n  END IF\n\n  GOSUB BGSCROLL\n\n  WAIT 0.05\n  LTI=LTI+0.05\nLOOP\n\nREM GAME OVER\nGAMEPAD 0\nSPRITE OFF\nLAYER 1\nCOLOR 4\nTEXT 31,29,\"GAME OVER\",1\nLAYER 0\nFOR A=62 TO 58 STEP -1\n  SOUND 2,A,4,0\n  SOUND 2,A-2,4\n  SOUND 2,A-7,4\nNEXT A\nA=15\nREPEAT\n  GOSUB BGSCROLL\n  A=A-1\n  WAIT 0.05\nUNTIL BUTTON TAP(0) AND A<=0\nSOUND OFF\nGOTO START\n\nINISHIP:\nCRA=-32\nSX=29\nSY=48\nSPRITE PALETTE 0,4,5,11\nSPRITE 0,SX,SY,0\nRETURN\n\nINIALIEN:\nALN(I,0)=INT(RND*60)\nALN(I,1)=0\nSPRITE PALETTE 5+I,4+RND*12,1,4+RND*12\nSPRITE 5+I,INT(RND*60),-4,2\nRETURN\n\nSNDLEVEL:\nSOUND 2,50,5,0\nSOUND 2,54,5\nSOUND 2,57,5\nSOUND 2,62,10\nRETURN\n\nHUD:\nLAYER 1\nCLS 0\nCOLOR 4\nTEXT 0,0,LIV\nCOLOR 1\nTEXT 63,0,SCO,2\nLAYER 0\nRETURN\n\nBGSCROLL:\nSCROLL 0,0 TO 63,63,0,1\nCOLOR 0\nLINE 0,0 TO 63,0\nIF RND<0.5 THEN\nCOLOR 12+RND*2\nPLOT RND*64,0\nEND IF\nRETURN\n\nPLAYSONG:\nTEMPO=3\nIOFF=10\nFOR I=0 TO 63\n  FOR C=0 TO 2\n    READ PTCH,INST\n    IF PTCH>-1 THEN\n      IF NT(C,2)>0 THEN\n        SOUND C,NT(C,0),NT(C,2)*TEMPO,NT(C,1)\n      END IF\n      NT(C,0)=PTCH\n      NT(C,1)=INST+IOFF\n      NT(C,2)=1\n    ELSE\n      NT(C,2)=NT(C,2)+1\n    END IF\n  NEXT C\nNEXT I\nFOR C=0 TO 2\n  IF NT(C,2)>0 THEN\n    SOUND C,NT(C,0),NT(C,2)*TEMPO,NT(C,1)\n  END IF\n  NT(C,0)=0\n  NT(C,1)=0\n  NT(C,2)=0\nNEXT C\nRETURN\n\nREM SPACE SHIP\nDATA 5,0,5,0,5,0,15,0,69,16,85,80,85,80,74,16\nREM LASER\nDATA 64,0,64,0,64,0,128,0,128,0,192,0,0,0,0,0\nREM ALIEN\nDATA 21,0,102,64,85,64,51,0,0,0,0,0,0,0,0,0\nREM EXPLOSION\nDATA 192,12,34,32,7,64,45,224,7,64,34,32,192,12,0,0\nREM ALIEN BULLET\nDATA 80,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0\n\nMUSIC:\nDATA 25,5,58,3,70,2\nDATA -1,0,-1,0,65,2\nDATA 34,1,53,3,61,2\nDATA -1,0,-1,0,-1,0\nDATA 25,5,61,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 34,1,53,3,70,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,65,3,-1,0\nDATA -1,0,-1,0,61,4\nDATA 34,1,53,3,-1,0\nDATA -1,0,-1,0,61,2\nDATA 25,5,61,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 34,1,60,3,70,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,-1,0,61,2\nDATA -1,0,-1,0,-1,0\nDATA 30,1,61,3,66,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,58,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 30,1,-1,0,61,2\nDATA -1,0,-1,0,-1,0\nDATA 25,5,53,3,66,2\nDATA -1,0,-1,0,61,4\nDATA 29,1,-1,0,-1,0\nDATA -1,0,-1,0,68,2\nDATA 25,5,0,0,61,4\nDATA -1,0,-1,0,-1,0\nDATA 25,5,-1,0,70,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,65,3,61,2\nDATA -1,0,-1,0,-1,0\nDATA 34,1,58,3,68,2\nDATA -1,0,-1,0,70,2\nDATA 25,5,68,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 34,1,58,3,65,2\nDATA -1,0,-1,0,61,4\nDATA 25,5,53,3,-1,0\nDATA -1,0,-1,0,70,2\nDATA 34,1,58,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 25,5,66,3,61,4\nDATA -1,0,-1,0,70,2\nDATA 34,1,65,3,65,2\nDATA -1,0,-1,0,61,2\nDATA 25,5,-1,0,-1,0\nDATA -1,0,-1,0,68,2\nDATA 37,1,66,3,-1,0\nDATA -1,0,-1,0,65,2\nDATA 25,5,65,3,61,4\nDATA -1,0,-1,0,68,2\nDATA 37,1,-1,0,-1,0\nDATA -1,0,-1,0,61,4\nDATA 25,5,61,3,65,2\nDATA -1,0,-1,0,68,2\nDATA 39,1,-1,0,70,2\nDATA -1,0,-1,0,0,0\nDATA 0,0,0,0,65,2\nDATA -1,0,-1,0,68,2\nDATA -1,0,-1,0,70,2\nDATA -1,0,-1,0,-1,0\n",
    "icon": "galaxy"
 },
 {
    "name": "LowRes Racing",
    "sourceCode": "REM ********************\nREM LOWRES RACING 1.2\nREM BY TIMO KLOSS\nREM RACING GAME\nREM COLLECT GREEN AND AVOID RED BOXES!\nREM ********************\n\nDIM NT(2,2)\n\nREM MUSIC INSTRUMENTS\nDEF SOUND 1,2,0.5\nDEF SOUND 2,0\nDEF SOUND 3,3,0,0.1\nDEF SOUND 4,3,0,0.08\n\nREM SOUND FX\nDEF SOUND 10,2,0.5\nDEF SOUND 11,2,0.3\nDEF SOUND 12,2,0.1\nDEF SOUND 13,1\nDEF SOUND 14,3\nDEF SOUND LINE 14,0.5,24,0\n\nGAMEINTRO:\n\nGAMEPAD 0\n\nREM DRAWS TITLE BACKGROUND\nCOLOR 9\nBAR 0,31 TO 63,63\nCOLOR 10\nFOR I=1 TO 20\n  PLOT RND*64,RND*31+31\nNEXT I\nCOLOR 3\nFOR Y=0 TO 32\n  BAR 30-Y,31+Y TO 33+Y,31+Y\nNEXT Y\n\nRESTORE MUSIC\nGOSUB PLAYSONG\n\nTXT$=\"LOWRES RACING\"\nC=8\nREPEAT\n  COLOR 11\n  BAR 0,0 TO 63,30\n\n  COLOR 0\n  TEXT 32,14,TXT$,1\n  COLOR 1\n  TEXT 31,13,TXT$,1\n\n  REM RENDERS WAVE EFFECT ON TEXT\n  SR=SR-0.2\n  FOR SX=0 TO 63\n    SCROLL SX,0 TO SX,30,0,SIN(SR+SX\/64*PI)*12\n  NEXT SX\n\n  C=C-1\n  IF C=5 THEN C=8\n  COLOR C\n  TEXT 31,58,\"PRESS BUTTON\",1\n\n  WAIT 0.04\nUNTIL BUTTON TAP(0)\n\nSOUND OFF\n\nSTART:\n\nREM INITIALIZES GAME VARIABLES\nCARX=32\nCARY=52\nSTREETY=0\nBLOCKX=30\nBLOCKY=0\nSCORE=0\nBLOCKISBAD=FALSE\nGAMEOVER=FALSE\nLEVEL=1\nLIVES=3\nBCOL=4\nGCOL=9\n\nCLS 9\nGAMEPAD 1\n\nDO\n  REM MOVES THE CAR\n  IF LEFT(0) AND CARX>18 THEN CARX=CARX-2\n  IF RIGHT(0) AND CARX<44 THEN CARX=CARX+2\n\n  REM RESETS THE BLOCK WHEN REACHED BOTTOM\n  IF BLOCKY>62 THEN BLOCKY=0\n  IF BLOCKY=0 THEN\n    BLOCKX=18+RND*26\n    BLOCKISBAD=RND<0.3\n  END IF\n\n  REM SCROLLS AND DRAWS THE GREEN SIDES\n  SCROLL 0,0 TO  15,63,0,2\n  SCROLL 47,0 TO 63,63,0,2\n  COLOR 9\n  BAR 0,0 TO 15,1\n  BAR 47,0 TO 63,1\n  COLOR 10\n  IF RND<0.2 THEN PLOT RND*16,0\n  IF RND<0.2 THEN PLOT 47+RND*17,0\n\n  REM DRAWS THE STREET\n  COLOR 3\n  BAR 16,0 TO 46,63\n\n  REM DRAWS THE MOVING SIDE LINES\n  COLOR 4\n  LINE 15,0 TO 15,63\n  LINE 47,0 TO 47,63\n  COLOR 1\n  FOR I=0 TO 7\n    BAR 15,STREETY+I*8 TO 15,STREETY+I*8+2\n    BAR 47,STREETY+I*8 TO 47,STREETY+I*8+2\n  NEXT I\n  STREETY=STREETY+2\n  IF STREETY=8 THEN STREETY=0\n\n  REM DRAWS THE BLOCK\n  IF BLOCKISBAD THEN COLOR BCOL ELSE COLOR GCOL\n  BLOCKY=BLOCKY+4\n  BAR BLOCKX-2,BLOCKY TO BLOCKX+2,BLOCKY+3\n\n  REM CHECKS BLOCK COLLISION WITH CAR\n  P1=POINT(CARX-2,CARY-1)\n  P2=POINT(CARX+2,CARY-1)\n  IF P1=BCOL OR P1=GCOL OR P2=BCOL OR P2=GCOL THEN\n    BLOCKY=0\n    IF NOT BLOCKISBAD THEN\n      SCORE=SCORE+1\n      SOUND 1,60,2,13\n      SOUND 1,67,2\n      SOUND 1,72,2\n    ELSE\n      GAMEOVER=TRUE\n    END IF\n    IF SCORE MOD 5=0 THEN LEVEL=LEVEL+1\n  END IF\n\n  REM DRAWS THE CAR\n  COLOR 13\n  BAR CARX-2,CARY TO CARX+2,CARY+9\n  COLOR 1\n  PLOT CARX-1,CARY\n  PLOT CARX+1,CARY\n  BAR CARX-1,CARY+3 TO CARX+1,CARY+4\n  COLOR 11\n  BAR CARX-1,CARY+7 TO CARX+1,CARY+8\n\n  COLOR 1\n  TEXT 31,1,SCORE,1\n\n  REM HANDLES COLLISION WITH RED BLOCK\n  IF GAMEOVER THEN\n    SOUND 1,20,6,14\n    SOUND 0,1,0,10\n    LIVES=LIVES-1\n    IF LIVES>0 THEN\n      FOR I=1 TO 6\n        COLOR I MOD 2 + 4\n        TEXT 31,30,\"CRASH\",1\n        WAIT 0.1\n      NEXT I\n      GAMEOVER=FALSE\n    ELSE\n      EXIT\n    END IF\n  END IF\n\n  SI=(SI+1) MOD 3\n  SOUND 0,20+LEVEL,0,10+SI\n\n  REM SPEED DEPENDS ON LEVEL\n  DELAY=0.08-(LEVEL\/100)\n  IF DELAY<0.04 THEN DELAY=0.04\n  WAIT DELAY\nLOOP\n\nREM GAME OVER!\nGAMEPAD 0\nSOUND 0,1,0,10\nSOUND 1,14,6\nC=8\nREPEAT\n  COLOR C\n  C=C-1\n  IF C=5 THEN C=8\n  TEXT 31,20,\"GAME OVER\",1\n  TEXT 31,40,\"PRESS BUTTON\",1\n  WAIT 0.1\nUNTIL BUTTON TAP(0)\n\nGOTO GAMEINTRO\n\nPLAYSONG:\nTEMPO=4\nIOFF=0\nFOR I=0 TO 33\n  FOR C=0 TO 2\n    READ PTCH,INST\n    IF PTCH>-1 THEN\n      IF NT(C,2)>0 THEN\n        SOUND C,NT(C,0),NT(C,2)*TEMPO,NT(C,1)\n      END IF\n      NT(C,0)=PTCH\n      NT(C,1)=INST+IOFF\n      NT(C,2)=1\n    ELSE\n      NT(C,2)=NT(C,2)+1\n    END IF\n  NEXT C\nNEXT I\nFOR C=0 TO 2\n  IF NT(C,2)>0 THEN\n    SOUND C,NT(C,0),NT(C,2)*TEMPO,NT(C,1)\n  END IF\n  NT(C,0)=0\n  NT(C,1)=0\n  NT(C,2)=0\nNEXT C\nRETURN\n\nMUSIC:\nDATA 58,1,27,2,25,4\nDATA -1,0,39,2,-1,0\nDATA -1,0,27,2,73,3\nDATA -1,0,39,2,-1,0\nDATA 54,1,27,2,25,4\nDATA 51,1,39,2,-1,0\nDATA -1,0,27,2,73,3\nDATA 0,0,39,2,25,4\nDATA 58,1,27,2,25,4\nDATA -1,0,39,2,-1,0\nDATA 0,0,27,2,73,3\nDATA 49,1,39,2,-1,0\nDATA -1,0,27,2,25,4\nDATA 0,0,39,2,-1,0\nDATA 51,1,27,2,73,3\nDATA -1,0,39,2,-1,0\nDATA 58,1,30,2,25,4\nDATA -1,0,42,2,-1,0\nDATA -1,0,30,2,73,3\nDATA -1,0,42,2,-1,0\nDATA 54,1,30,2,25,4\nDATA 58,1,42,2,-1,0\nDATA -1,0,30,2,73,3\nDATA 0,0,42,2,25,4\nDATA 56,1,32,2,25,4\nDATA -1,0,44,2,-1,0\nDATA 0,0,32,2,73,3\nDATA 54,1,44,2,-1,0\nDATA -1,0,32,2,25,4\nDATA 0,0,44,2,-1,0\nDATA 56,1,32,2,73,3\nDATA -1,0,44,2,25,3\nDATA 51,1,27,2,25,4\nDATA -1,0,-1,0,-1,0\nDATA 0,0,0,0,-1,0\n",
    "icon": "racing"
 },
 {
    "name": "LowRes Tennis",
    "sourceCode": "REM ********************\nREM LOWRES TENNIS 1.1\nREM BY TIMO KLOSS\nREM CLASSIC TENNIS VIDEO GAME\nREM NOTE: SECOND PLAYER CONTROLS WITH A AND B BUTTONS\nREM ********************\n\nGAMEPAD 1\nNPLAYERS=1\n\nMENU:\nSOUND 0,40,4,2\nSOUND 0,44,4\nSOUND 0,47,4\nSOUND 0,52,4\n\nX=31\nD=1\nREPEAT\n  IF UP(0) THEN NPLAYERS=1\n  IF DOWN(0) THEN NPLAYERS=2\n\n  CLS 0\n\n  REM DRAWS MOVING TITLE TEXT\n  X=X+D\n  IF X>=36 OR X<=26 THEN D=-D\n  TEXT X,4,\"LOWRES TENNIS\",1\n\n  REM DRAWS PLAYER MENU\n  REM CURRENT SELECTION BLINKS\n  IF NPLAYERS=2 OR B THEN TEXT 31,35,\"1 PLAYER\",1\n  IF NPLAYERS=1 OR B THEN TEXT 31,41,\"2 PLAYERS\",1\n  B=NOT B\n\n  WAIT 0.1\nUNTIL BUTTON TAP(0)\n\nREM INITIALIZES GAME VARIABLES\nY1=30\nY2=30\nPDIRX=-1\nSCORE1=0\nSCORE2=0\n\nDO\n  REM SETS BALL START POSITION FOR LEFT OR RIGHT PLAYER\n  IF PDIRX=1 THEN\n    PX=2\n    PY=Y1\n  ELSE\n    PX=60\n    PY=Y2\n  END IF\n\n  REM RANDOM BALL ANGLE\n  PDIRY=RND*2-1\n\n  SOUND 0,50,2,2\n\n  DO\n    REM PLAYER 1 CONTROL\n    IF UP(0) AND Y1>4 THEN Y1=Y1-2\n    IF DOWN(0) AND Y1<58 THEN Y1=Y1+2\n\n    REM PLAYER 2 CONTROL BY USER OR CPU\n    IF NPLAYERS=1 THEN\n      IF Y2>PY AND Y2>4 THEN Y2=Y2-2\n      IF Y2<PY AND Y2<58 THEN Y2=Y2+2\n    ELSE\n      IF BUTTON(0,2) AND Y2>4 THEN Y2=Y2-2\n      IF BUTTON(0,1) AND Y2<58 THEN Y2=Y2+2\n    END IF\n\n    REM MOVES BALL POSITION\n    PX=PX+PDIRX*2\n    PY=PY+PDIRY*2\n\n    REM BALL BOUNCES OFF FROM UPPER AND LOWER BORDERS\n    IF PY<=0 AND PDIRY<0 OR PY>=62 AND PDIRY>0 THEN\n      PDIRY=-PDIRY\n      SOUND 0,20,1,2\n    END IF\n    IF PY<0 THEN PY=0\n    IF PY>62 THEN PY=62\n\n    REM CHECKS BALL COLLISION FOR PLAYER 1\n    IF PX<=2 AND PDIRX<0 THEN\n      IF PY>Y1-5 AND PY<Y1+5 THEN\n        PDIRX=1\n        PDIRY=PDIRY+(PY-Y1)\/4\n        SOUND 0,44,1,2\n      END IF\n      IF PX<0 THEN\n        SCORE2=SCORE2+1\n        EXIT\n      END IF\n    END IF\n\n    REM CHECKS BALL COLLISION FOR PLAYER 2\n    IF PX>=60 AND PDIRX>0 THEN\n      IF PY>Y2-5 AND PY<Y2+5 THEN\n        PDIRX=-1\n        PDIRY=PDIRY+(PY-Y2)\/4\n        SOUND 0,45,1,2\n      END IF\n      IF PX>63 THEN\n        SCORE1=SCORE1+1\n        EXIT\n      END IF\n    END IF\n\n    CLS 0\n\n    REM DRAWS PLAYER 1\n    BAR 0,Y1-4 TO 1,Y1+5\n\n    REM DRAWS PLAYER 2\n    BAR 62,Y2-4 TO 63,Y2+5\n\n    REM DRAWS BALL\n    BAR PX,PY TO PX+1,PY+1\n\n    WAIT 0.05\n  LOOP\n\n  REM BALL OUT!\n\n  SOUND 0,40,4,2\n  SOUND 0,36,6\n\n  REM SHOWS SCORES\n  COLOR 1\n  TEXT 15,4,SCORE1,1\n  TEXT 47,4,SCORE2,1\n  WAIT 1\n\n  REM CHECKS FOR END OF MATCH AND SHOWS WINNER\n  IF SCORE1=7 OR SCORE2=7 THEN\n    IF SCORE1>SCORE2 THEN X=15 ELSE X=47\n    TEXT X,10,\"WINNER\",1\n    WAIT 2\n    GOTO MENU\n  END IF\n\nLOOP\n",
    "icon": "tennis"
 },
 {
    "name": "LowRes Snake 2",
    "sourceCode": "REM ********************\nREM LOWRES SNAKE 2.1\nREM BY TIMO KLOSS\nREM SNAKE GAME\nREM COLLECT BLINKING DOTS AND DON'T HIT YOURSELF!\nREM ********************\n\nMAXLEN=1000\nDIM TX(MAXLEN),TY(MAXLEN)\nBO=10\n\nD=1\n\nDO\n  REM THE TITLE SCREEN\n\n  GAMEPAD 0\n\n  CLS 9\n  COLOR 10\n  FOR I=1 TO 20\n    PLOT RND*64,RND*64\n  NEXT I\n\n  T$=\"LOWRES SNAKE 2\"\n  COLOR 10\n  TEXT 31,11,T$,1\n  COLOR 1\n  TEXT 31,10,T$,1\n\n  GOSUB PLAYMUSIC\n\n  REPEAT\n    GOSUB BLINK\n    TEXT 31,40,\"PRESS BUTTON\",1\n    WAIT 0.1\n  UNTIL BUTTON TAP(0)\n\n  REM THE GAME\n\n  REM PAINTS GREEN SCREEN WITH WHITE BORDER\n  CLS 10\n  COLOR 9\n  BAR BO,BO TO 63-BO,63-BO\n  COLOR 1\n  BOX BO,BO TO 63-BO,63-BO\n\n  REM RESET GAME\n  TLEN=8\n  TI=0\n  FOR I=0 TO MAXLEN\n    TX(I)=0\n  NEXT I\n  X=31\n  Y=31\n  SCORE=0\n  TIME=0\n\n  GOSUB PLACEDOT\n  GOSUB DRAWINFO\n\n  GAMEPAD 1\n\n  DO\n    REM CHECKS FOR DIRECTION CHANGES\n    IF LEFT(0) AND D<>2 THEN\n      D=1\n    ELSE IF RIGHT(0) AND D<>1 THEN\n      D=2\n    ELSE IF UP(0) AND D<>4 THEN\n      D=3\n    ELSE IF DOWN(0) AND D<>3 THEN\n      D=4\n    END IF\n\n    REM MOVES SNAKE IN CURRENT DIRECTION\n    IF D=1 THEN X=X-1\n    IF D=2 THEN X=X+1\n    IF D=3 THEN Y=Y-1\n    IF D=4 THEN Y=Y+1\n\n    REM CHECKS FOR COLLISION\n    IF POINT(X,Y)=1 THEN EXIT\n\n    REM CHECKS FOR COLLECT\n    IF X=DX AND Y=DY THEN\n      SCORE=SCORE+1\n      GOSUB SNDCOLLECT\n      TLEN=TLEN+8\n      IF TLEN>=MAXLEN THEN TLEN=MAXLEN-1\n      GOSUB PLACEDOT\n    END IF\n\n    REM DRAWS HEAD OF SNAKE AT CURRENT POSITION\n    COLOR 1\n    PLOT X,Y\n\n    REM STORE CURRENT POSITION AND HANDLE TAIL\n    TX(TI)=X\n    TY(TI)=Y\n    TEI=((TI-TLEN)+MAXLEN) MOD MAXLEN\n    IF TX(TEI)<>0 THEN\n      COLOR 9\n      PLOT TX(TEI),TY(TEI)\n    END IF\n    TI=(TI+1) MOD MAXLEN\n\n    REM DRAWS BLINKING DOT TO COLLECT\n    GOSUB BLINK\n    PLOT DX,DY\n\n    GOSUB DRAWINFO\n\n    WAIT 0.1\n    TIME=TIME+0.1\n  LOOP\n\n  REM GAME OVER!\n\n  GOSUB SNDHIT\n  GAMEPAD 0\n\n  REPEAT\n    GOSUB BLINK\n    TEXT 31,58,\"GAME OVER\",1\n    WAIT 0.1\n  UNTIL BUTTON TAP(0)\n\nLOOP\n\nPLACEDOT:\nREM SETS NEW POSITION FOR DOT\nDX=INT(BO+1+RND*(61-2*BO))\nDY=INT(BO+1+RND*(61-2*BO))\nRETURN\n\nBLINK:\nREM TOGGLES BETWEEN COLORS\nIF C=6 THEN C=7 ELSE C=6\nCOLOR C\nRETURN\n\nDRAWINFO:\nCOLOR 10\nBAR 0,0 TO 63,BO-1\nCOLOR 1\nTEXT BO,1,SCORE\nS=INT(TIME)\nM=INT(S\/60)\nS=S MOD 60\nIF S<10 THEN D$=\":0\" ELSE D$=\":\"\nTEXT 63-BO,1,M+D$+S,2\nRETURN\n\nPLAYMUSIC:\nSOUND 0,53,12\nSOUND 0,56,6\nSOUND 0,49,6\nSOUND 0,54,6\nSOUND 0,53,6\nSOUND 0,51,6\nSOUND 0,53,6\nSOUND 0,49,6\nSOUND 0,0,6\nSOUND 0,61,6\nSOUND 1,37,12\nSOUND 1,25,12\nSOUND 1,32,12\nSOUND 1,29,12\nSOUND 1,25,6\nRETURN\n\nSNDCOLLECT:\nFOR I=0 TO 2\n  SOUND 2,50+I*5+SCORE MOD 5,2\n  SOUND 2,46+I*6+SCORE MOD 5,2\nNEXT I\nRETURN\n\nSNDHIT:\nSOUND 0,56,6\nSOUND 0,55,6\nSOUND 0,54,6\nSOUND 1,25,6\nSOUND 1,24,6\nSOUND 1,23,6\nRETURN\n",
    "icon": "snake"
 },
 {
 "name": "Scroller",
 "sourceCode": "REM TEXT SCROLLER WITH EFFECTS\n\nX=64\nBY=-8\nTXT$=\"WELCOME TO LOWRES CODER!\"\nTXTLEN=TEXT WIDTH(TXT$)+1\n\nDO\n  CLS 15\n\n  REM DRAWS A UP AND DOWN MOVING BAR\n  BR=BR+0.13\n  BY=SIN(BR)*12+28\n  COLOR 14\n  BAR 0,BY TO 63,BY+7\n\n  REM DRAWS SOME RANDOM PIXELS\n  FOR I=1 TO 10\n    PLOT RND*63,RND*61+1\n  NEXT I\n\n  REM DRAWS SCROLLING TEXT WITH SHADOW\n  X=X-1\n  COLOR 0\n  TEXT X+1,30,TXT$\n  COLOR 1\n  TEXT X,29,TXT$\n\n  REM RENDERS WAVE EFFECT\n  SR=SR-0.2\n  FOR SX=0 TO 63\n    SCROLL SX,0 TO SX,63,0,SIN(SR+SX\/128*PI)*16\n  NEXT SX\n\n  WAIT 0.04\n\n  REM RESTARTS TEXT WHEN MOVED OUT OF SCREEN\n  IF X<-TXTLEN THEN X=64\nLOOP\n",
 "icon": "scroller"
 },
 {
    "name": "Sprite Designer",
    "sourceCode":"REM ********************\nREM SPRITE DESIGNER\nREM BY TIMO KLOSS\nREM IMAGE EDITOR TO CREATE SPRITES\nREM BOTTOM BOX: DRAW COLOR (FIRST IS BACKGROUND)\nREM LEFT BOX: PALETTE COLOR FOR CURRENT DRAW COLOR\nREM BUTTON A: DRAW OR SELECT\nREM BUTTON B: TOGGLE BETWEEN SECTIONS\nREM PROGRAM WRITES IMAGE DATA TO TRANSFER ON EXIT.\nREM COLOR PALETTES ARE NOT SAVED AND MUST BE PROGRAMMED.\nREM ********************\n\nREM UI POSITIONS\nOX=16\nOY=1\nPOX=1\nPOY=1\nSC=4\n\nDIM BYT(15)\nDIM PXL(7,7)\nDIM PAL(3)\nPAL(0)=0\nPAL(1)=1\nPAL(2)=2\nPAL(3)=3\nMO=0\nCOL=1\n\nGAMEPAD 1\n\nREM THE MENU\n\nS=0\nDO\n  GOSUB BLINK\n\n  IF UP(0) THEN S=0\n  IF DOWN(0) THEN S=1\n  IF BUTTON(0) THEN EXIT\n\n  CLS 6\n  COLOR 1\n  TEXT 32,1,\"SPRITE DESIGNER\",1\n\n  IF S=0 AND BL THEN COLOR 7 ELSE COLOR 5\n  TEXT 32,31,\"NEW\",1\n  IF S=1 AND BL THEN COLOR 7 ELSE COLOR 5\n  TEXT 32,37,\"TRANSFER\",1\n  WAIT 0.25 TAP\nLOOP\n\nWHILE BUTTON(0)\n  WAIT 0.1\nWEND\n\nIF S=1 THEN GOSUB LOAD\n\nREM THE EDITOR\n\nON END GOTO SAVEEND\n\nCLS 0\nGOSUB DRAWALL\nDO\n  GOSUB BLINK\n\n  IF BUTTON TAP(0,2) THEN\n    MO=(MO+1) MOD 3\n    BL=FALSE\n    GOSUB DRAWALL\n  END IF\n\n  IF MO=0 THEN\n    GOSUB DRAWING\n  ELSE IF MO=1 THEN\n    GOSUB SELECTINGCOLOR\n  ELSE IF MO=2 THEN\n    GOSUB SELECTINGPALETTE\n  END IF\n\n  WAIT 0.3 TAP\nLOOP\nEND\n\nBLINK:\nBL=NOT BL\nIF UP(0) OR DOWN(0) OR LEFT(0) OR RIGHT(0) THEN BL=TRUE\nRETURN\n\nDRAWALL:\nGOSUB DRAWCANVAS\nGOSUB DRAWCOLOR\nGOSUB DRAWPALETTE\nRETURN\n\nDRAWING:\nIF UP(0) AND DY>0 THEN DY=DY-1\nIF DOWN(0) AND DY<7 THEN DY=DY+1\nIF LEFT(0) AND DX>0 THEN DX=DX-1\nIF RIGHT(0) AND DX<7 THEN DX=DX+1\nIF BUTTON(0,1) THEN PXL(DX,DY)=COL\nGOSUB DRAWCANVAS\nRETURN\n\nDRAWCANVAS:\nCOLOR 6\nBOX OX-1,OY-1 TO OX+8*SC,OY+8*SC\nFOR Y=0 TO 7\n  FOR X=0 TO 7\n    C=PAL(PXL(X,Y))\n    COLOR C\n    TX=OX+X*SC\n    TY=OY+Y*SC\n    BAR TX,TY TO TX+SC-1, TY+SC-1\n    IF X=DX AND Y=DY AND BL AND MO=0 THEN\n      IF C=PAL(COL) THEN\n        IF C=1 THEN COLOR 2 ELSE COLOR 1\n      ELSE\n        COLOR PAL(COL)\n      END IF\n      BOX TX,TY TO TX+SC-1, TY+SC-1\n    END IF\n  NEXT X\nNEXT Y\nRETURN\n\nSELECTINGCOLOR:\nIF LEFT(0) THEN COL=(COL+3) MOD 4\nIF RIGHT(0) THEN COL=(COL+1) MOD 4\nIF BUTTON(0,1) THEN MO=0\nGOSUB DRAWCOLOR\nGOSUB DRAWPALETTE\nRETURN\n\nDRAWCOLOR:\nCOLOR 6\nBOX OX-1,OY+32 TO OX+8*SC,OY+33+SC\nFOR I=0 TO 3\n  C=PAL(I)\n  COLOR C\n  TX=OX+I*SC*2\n  TY=OY+33\n  BAR TX,TY TO TX+2*SC-1,TY+SC-1\n  IF I=COL AND (BL OR MO<>1) THEN\n    IF C=1 THEN COLOR 0 ELSE COLOR 1\n    BOX TX,TY TO TX+2*SC-1,TY+SC-1\n  END IF\nNEXT I\nRETURN\n\nSELECTINGPALETTE:\nIF LEFT(0) THEN PAL(COL)=(PAL(COL)+15) MOD 16\nIF RIGHT(0) THEN PAL(COL)=(PAL(COL)+1) MOD 16\nIF UP(0) THEN PAL(COL)=(PAL(COL)+14) MOD 16\nIF DOWN(0) THEN PAL(COL)=(PAL(COL)+2) MOD 16\nIF BUTTON(0,1) THEN MO=0\nGOSUB DRAWALL\nRETURN\n\nDRAWPALETTE:\nCOLOR 6\nBOX POX-1,POY-1 TO POX+8,POY+32\nC=0\nFOR Y=0 TO 7\n  FOR X=0 TO 1\n    TX=POX+X*4\n    TY=POY+Y*4\n    COLOR C\n    BAR TX,TY TO TX+3,TY+3\n    IF C=PAL(COL) AND (BL OR MO<>2) THEN\n      IF C=1 THEN COLOR 0 ELSE COLOR 1\n      BOX TX,TY TO TX+3,TY+3\n    END IF\n    C=C+1\n  NEXT X\nNEXT Y\nRETURN\n\nSAVE:\nI=0\nB=0\nFOR Y=0 TO 7\n  FOR X=0 TO 7\n    B=B*4\n    B=B OR PXL(X,Y)\n    IF X=3 OR X=7 THEN\n      BYT(I)=B\n      I=I+1\n      B=0\n    END IF\n  NEXT X\nNEXT Y\nWRITE CLEAR\nWRITE BYT(0),BYT(1),BYT(2),BYT(3), BYT(4),BYT(5),BYT(6),BYT(7), BYT(8),BYT(9),BYT(10),BYT(11), BYT(12),BYT(13),BYT(14),BYT(15)\nRETURN\n\nLOAD:\nRESTORE TRANSFER\nFOR Y=0 TO 7\n  X=0\n  FOR A=0 TO 1\n    READ B\n    C=B\n    PXL(X,Y)=C\/64 AND 3\n    X=X+1\n    PXL(X,Y)=C\/16 AND 3\n    X=X+1\n    PXL(X,Y)=C\/4 AND 3\n    X=X+1\n    PXL(X,Y)=C AND 3\n    X=X+1\n  NEXT A\nNEXT Y\nRETURN\n\nSAVEEND:\nGOSUB SAVE\nCLS 6\nCOLOR 7\nTEXT 32,30,\"TRANSFERED\",1\nWAIT 1\nEND\n",
    "icon": "spritedesigner"
 },
 {
    "name": "Hello",
    "sourceCode": "REM SHOWS TEXT WITH EFFECT\n\nDO\n  CLS 0\n\n  REM DRAWS SOME PIXELS IN A LINE\n  COLOR 1\n  FOR A=1 TO 20\n    PLOT RND*64,31\n  NEXT\n\n  REM DRAWS TEXT WITH RANDOM COLOR\n  COLOR RND*16\n  TEXT 31,29,\"HELLO\",1\n\n  WAIT 0.1\nLOOP\n",
    "icon": "hello"
 },
 {
    "name": "Pixels",
    "sourceCode": "REM DRAWS RANDOM PIXELS AND SCROLLS\n\nCLS 2\nDO\n  REM SCROLLS TO THE LEFT\n  SCROLL 0,0 TO 63,63,-1,0\n\n  REM FILLS THE RIGHT SIDE WITH NEW PIXELS\n  FOR A=0 TO 63\n    COLOR RND*4\n    PLOT 63,A\n  NEXT A\n\n  WAIT 0.1\nLOOP\n",
    "icon": "pixels"
 },
 {
    "name": "Palette",
    "sourceCode": "REM SHOWS ALL AVAILABLE COLORS\n\nFOR A=0 TO 15\n  COLOR A\n  BAR A*4,0 TO A*4+3,63\nNEXT A\n",
    "icon": "palette"
 },
 {
    "name": "Sprites",
    "sourceCode": "REM MOVING SPRITES ON SCROLLING BACKGROUND\n\nDIM ARR(15),DIR(7,1)\n\nREM READ SPRITE IMAGE\nFOR I=0 TO 15\n  READ ARR(I)\nNEXT I\nDEF SPRITE 0,ARR\n\nREM SET MOVE DIRECTIONS AND PREPARE SPRITES\nFOR I=0 TO 7\n  DIR(I,0)=RND*6-3\n  DIR(I,1)=RND*6-3\n  SPRITE PALETTE I,1+RND*15,1,1+RND*15\n  SPRITE I,28,28,0\nNEXT I\n\nDO\n  REM MOVE ALL SPRITES\n  FOR I=0 TO 7\n    X=SPRITE X(I)+DIR(I,0)\n    Y=SPRITE Y(I)+DIR(I,1)\n    IF X>63 THEN X=-7\n    IF X<-7 THEN X=63\n    IF Y>63 THEN Y=-7\n    IF Y<-7 THEN Y=63\n    SPRITE I,X,Y,0\n  NEXT I\n\n  REM SCROLL BACKGROUND AND DRAW DOTS\n  SCROLL 0,0 TO 63,63,0,-1\n  COLOR 0\n  LINE 0,63 TO 63,63\n  COLOR 3\n  PLOT RND*64,63\n\n  WAIT 0.05\nLOOP\n\nREM IMAGE DATA FOR SPRITE\nDATA 80,5,164,26,6,144,2,128,1,64,21,84,208,7,240,15\n",
    "icon": "sprites"
 }
]