[
 {
    "name": "LowRes Galaxy",
    "sourceCode": "REM ********************\nREM LOWRES GALAXY 1.3\nREM BY TIMO KLOSS\nREM SPACE SHOOTER GAME\nREM ********************\n\nPERSIST HISCORE\n\nREM READ SPRITE DATA\nRESTORE SPRITES\nDIM ARR(15)\nFOR J=0 TO 4\n  FOR I=0 TO 15\n    READ ARR(I)\n  NEXT I\n  READ C0,C1,C2,C3\n  DEF SPRITE J,ARR,C1,C2,C3\nNEXT J\n\nREM MELODY\nDEF SOUND 0,1,0.5,0\nDEF SOUND LINE 0,0.1,2,0\nREM LASER\nDEF SOUND 1,2,0.05,0\nDEF SOUND LINE 1,0.2,24,1.0\nREM EXPLO\nDEF SOUND 2,3,0.5,0\nDEF SOUND LINE 2,0.5,41,0\nREM ALIEN LASER\nDEF SOUND 3,1,0.5,0\nDEF SOUND LINE 3,0.5,-24,0\n\nREM TITLE SONG SOUNDS\nDEF SOUND 11,0\nDEF SOUND LINE 11,0.05,12,0\nDEF SOUND 12,1,0,0.1\nDEF SOUND LINE 12,0.025,12,0\nDEF SOUND 13,2,0.2\nDEF SOUND LINE 13,1,0,0.8\nDEF SOUND 14,3,0,0.1\nDEF SOUND LINE 14,0.1,24,0\nDEF SOUND 15,2,0.5,0.1\nDEF SOUND LINE 15,0.1,36,0\n\nDIM ALN(3,1),BUL(7,1)\nDIM NT(2,2)\n\nREM TITLE SCREEN\n\nSTART:\nGAMEPAD 0\nLAYER 1\nCLS 0\nT$=\"LOWRES GALAXY\"\nCOLOR 5\nTEXT 30,29,T$,1\nTEXT 32,29,T$,1\nTEXT 31,28,T$,1\nTEXT 31,30,T$,1\nCOLOR 4\nTEXT 31,29,T$,1\nCOLOR 12\nTEXT 32,51,\"HI:\"+HISCORE,1\nLAYER 0\nA=0\nRESTORE MUSIC\nGOSUB PLAYSONG\nREPEAT\n  GOSUB BGSCROLL\n  LAYER 1\n  IF A MOD 20<10 THEN COLOR 1 ELSE COLOR 3\n  TEXT 31,57,\"PRESS BUTTON\",1\n  A=A+1\n  LAYER 0\n  WAIT 0.05\nUNTIL BUTTON TAP(0)\nSOUND OFF\n\nREM GAME INIT\n\nLIV=5\nLEV=1\nSCO=0\nLTI=0\n\nGOSUB HUD\nFOR I=0 TO 3\n  GOSUB INIALIEN\nNEXT I\nGOSUB INISHIP\nGOSUB SNDLEVEL\nGAMEPAD 1\n\nDO\n  REM CHECK LEVEL UP\n  IF LTI>=10 THEN\n    LEV=LEV+1\n    LTI=0\n    COLOR 15\n    TEXT 32,0,\"LEVEL \"+LEV,1\n    GOSUB SNDLEVEL\n  END IF\n\n  REM PLAYER'S SHIP\n  IF CRA>0 THEN\n    REM CRASH EFFECT\n    CRA=CRA+1\n    SPRITE PALETTE 0,RND*16,RND*16,RND*16\n    IF CRA=16 THEN\n      LIV=LIV-1\n      GOSUB HUD\n      IF LIV=0 THEN EXIT ELSE GOSUB INISHIP\n    END IF\n  ELSE\n    REM SHIP CONTROL\n    IF LEFT(0) AND SX>0 THEN SX=SX-1\n    IF RIGHT(0) AND SX<63-5 THEN SX=SX+1\n    IF UP(0) AND SY>0 THEN SY=SY-1\n    IF DOWN(0) AND SY<63-7 THEN SY=SY+1\n    SPRITE PALETTE 0,,RND*16\n    IF CRA<0 THEN CRA=CRA+1\n  END IF\n\n  REM FLICKER SHIP IF PLAYER HAS SHIELD\n  IF CRA>=0 OR CRA MOD 2=0 THEN\n    SPRITE 0,SX,SY\n  ELSE\n    SPRITE OFF 0\n  END IF\n\n  REM PLAYER SHOOTING\n  IF BUTTON TAP(0) AND CRA<=0 THEN\n    SPRITE 1+LI,SX+2+RND*2,SY,1\n    LI=(LI+1)MOD 4\n    SOUND 1,38,2,1\n  END IF\n\n  REM MOVE PLAYER'S LASERS\n  FOR I=1 TO 4\n    IF SPRITE I(I)<>-1 THEN SPRITE I,,SPRITE Y(I)-4\n  NEXT I\n\n  REM UPDATE ALIENS\n  FOR I=0 TO 3\n    X=SPRITE X(5+I)\n    Y=SPRITE Y(5+I)\n    IF ALN(I,0)<0 THEN\n      REM CRASH EFFECT\n      SPRITE PALETTE 5+I,RND*16,RND*16,RND*16\n      ALN(I,0)=ALN(I,0)-1\n      IF ALN(I,0)=-8 THEN GOSUB INIALIEN\n    ELSE IF SPRITE HIT(5+I,1 TO 4) THEN\n      REM HIT BY LASER\n      ALN(I,0)=-1\n      SPRITE 5+I,X-2,Y-2,3\n      SOUND 0,20,5,2\n      SCO=SCO+40+10*LEV\n      GOSUB HUD\n      SPRITE OFF HIT\n    ELSE\n      REM MOVE\n      IF ALN(I,0) MOD 8 = 7 THEN ALN(I,1)=INT(RND*3)\n      ALN(I,0)=ALN(I,0)+1\n      D=ALN(I,1)\n      IF D=0 AND Y>=64 THEN D=-1\n      IF D=1 AND X<=0 THEN D=2\n      IF D=2 AND X>=59 THEN D=1\n      IF D=0 THEN\n        Y=Y+1\n      ELSE IF D=1 THEN\n        X=X-1\n      ELSE IF D=2 THEN\n        X=X+1\n      END IF\n      SPRITE 5+I,X,Y,2\n      IF D=-1 THEN GOSUB INIALIEN ELSE ALN(I,1)=D\n\n      REM ALIEN SHOOTING\n      R=60-LEV\n      IF R<20 THEN R=20\n      IF Y<32 AND ALN(I,0) MOD R=0 THEN\n        SPRITE 9+BI,X+1,Y+2,4\n        U=SX-X\n        V=SY-Y\n        W=SQR(U*U+V*V)\/2\n        BUL(BI,0)=U\/W\n        BUL(BI,1)=V\/W\n        BI=(BI+1)MOD 7\n        SOUND 2,84,3,3\n      END IF\n    END IF\n  NEXT I\n\n  REM MOVE ALIENS' BULLETS\n  FOR I=0 TO 6\n    IF BUL(I,1)<>0 THEN\n      J=9+I\n      SPRITE J,SPRITE X(J)+BUL(I,0),SPRITE Y(J)+BUL(I,1)\n    END IF\n  NEXT I\n\n  REM CHECK PLAYER COLLISION\n  IF SPRITE HIT(0,5 TO 15) AND CRA=0 THEN\n    CRA=1\n    SOUND 0,36,20,2\n    SPRITE 0,,,3\n  END IF\n\n  GOSUB BGSCROLL\n\n  WAIT 0.05\n  LTI=LTI+0.05\nLOOP\n\nREM GAME OVER\nGAMEPAD 0\nSPRITE OFF\nLAYER 1\nCOLOR 4\nTEXT 31,29,\"GAME OVER\",1\nIF SCO>HISCORE THEN\n  HISCORE=SCO\n  NEWHI=TRUE\nELSE\n  NEWHI=FALSE\nEND IF\nLAYER 0\nIF NEWHI THEN\n  FOR A=58 TO 62\n    SOUND 2,A-7,4,0\n    SOUND 2,A-2,4\n    SOUND 2,A,4\n  NEXT A\nELSE\n  FOR A=62 TO 58 STEP -1\n    SOUND 2,A,4,0\n    SOUND 2,A-2,4\n    SOUND 2,A-7,4\n  NEXT A\nEND IF\nA=15\nREPEAT\n  GOSUB BGSCROLL\n  IF NEWHI THEN\n    LAYER 1\n    COLOR 1+RND*15\n    TEXT 31,35,\"NEW HIGHSCORE\",1\n    LAYER 0\n  END IF\n  A=A-1\n  WAIT 0.05\nUNTIL BUTTON TAP(0) AND A<=0\nSOUND OFF\nGOTO START\n\nINISHIP:\nCRA=-32\nSX=29\nSY=48\nSPRITE PALETTE 0,-1,-1,-1\nSPRITE 0,SX,SY,0\nRETURN\n\nINIALIEN:\nALN(I,0)=INT(RND*60)\nALN(I,1)=0\nSPRITE PALETTE 5+I,4+RND*12,1,4+RND*12\nSPRITE 5+I,INT(RND*60),-4,2\nRETURN\n\nSNDLEVEL:\nSOUND 2,50,5,0\nSOUND 2,54,5\nSOUND 2,57,5\nSOUND 2,62,10\nRETURN\n\nHUD:\nLAYER 1\nCLS 0\nCOLOR 4\nTEXT 0,0,LIV\nCOLOR 1\nTEXT 63,0,SCO,2\nLAYER 0\nRETURN\n\nBGSCROLL:\nSCROLL 0,0 TO 63,63,0,1\nCOLOR 0\nLINE 0,0 TO 63,0\nIF RND<0.5 THEN\nCOLOR 12+RND*2\nPLOT RND*64,0\nEND IF\nRETURN\n\nPLAYSONG:\nMTEMPO=3\nIOFF=10\nFOR I=0 TO 63\n  FOR C=0 TO 2\n    READ PTCH,INST\n    IF PTCH>-1 THEN\n      IF NT(C,2)>0 THEN\n        SOUND C,NT(C,0),NT(C,2)*MTEMPO,NT(C,1)\n      END IF\n      NT(C,0)=PTCH\n      NT(C,1)=INST+IOFF\n      NT(C,2)=1\n    ELSE\n      NT(C,2)=NT(C,2)+1\n    END IF\n  NEXT C\nNEXT I\nFOR C=0 TO 2\n  IF NT(C,2)>0 THEN\n    SOUND C,NT(C,0),NT(C,2)*MTEMPO,NT(C,1)\n  END IF\n  NT(C,0)=0\n  NT(C,1)=0\n  NT(C,2)=0\nNEXT C\nRETURN\n\nSPRITES:\nREM SPACE SHIP\nDATA 5,0,5,0,5,0,15,0,69,16,85,80,85,80,74,16\nDATA 0,4,5,11\nREM LASER\nDATA 64,0,64,0,64,0,128,0,128,0,192,0,0,0,0,0\nDATA 0,8,7,6\nREM ALIEN\nDATA 21,0,102,64,85,64,51,0,0,0,0,0,0,0,0,0\nDATA 0,11,1,7\nREM EXPLOSION\nDATA 192,12,34,32,7,64,45,224,7,64,34,32,192,12,0,0\nDATA 0,8,7,4\nREM ALIEN BULLET\nDATA 80,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0\nDATA 0,7,0,0\n\nMUSIC:\nDATA 25,5,58,3,70,2\nDATA -1,0,-1,0,65,2\nDATA 34,1,53,3,61,2\nDATA -1,0,-1,0,-1,0\nDATA 25,5,61,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 34,1,53,3,70,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,65,3,-1,0\nDATA -1,0,-1,0,61,4\nDATA 34,1,53,3,-1,0\nDATA -1,0,-1,0,61,2\nDATA 25,5,61,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 34,1,60,3,70,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,-1,0,61,2\nDATA -1,0,-1,0,-1,0\nDATA 30,1,61,3,66,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,58,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 30,1,-1,0,61,2\nDATA -1,0,-1,0,-1,0\nDATA 25,5,53,3,66,2\nDATA -1,0,-1,0,61,4\nDATA 29,1,-1,0,-1,0\nDATA -1,0,-1,0,68,2\nDATA 25,5,0,0,61,4\nDATA -1,0,-1,0,-1,0\nDATA 25,5,-1,0,70,2\nDATA -1,0,-1,0,65,2\nDATA 25,5,65,3,61,2\nDATA -1,0,-1,0,-1,0\nDATA 34,1,58,3,68,2\nDATA -1,0,-1,0,70,2\nDATA 25,5,68,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 34,1,58,3,65,2\nDATA -1,0,-1,0,61,4\nDATA 25,5,53,3,-1,0\nDATA -1,0,-1,0,70,2\nDATA 34,1,58,3,61,4\nDATA -1,0,-1,0,-1,0\nDATA 25,5,66,3,61,4\nDATA -1,0,-1,0,70,2\nDATA 34,1,65,3,65,2\nDATA -1,0,-1,0,61,2\nDATA 25,5,-1,0,-1,0\nDATA -1,0,-1,0,68,2\nDATA 37,1,66,3,-1,0\nDATA -1,0,-1,0,65,2\nDATA 25,5,65,3,61,4\nDATA -1,0,-1,0,68,2\nDATA 37,1,-1,0,-1,0\nDATA -1,0,-1,0,61,4\nDATA 25,5,61,3,65,2\nDATA -1,0,-1,0,68,2\nDATA 39,1,-1,0,70,2\nDATA -1,0,-1,0,0,0\nDATA 0,0,0,0,65,2\nDATA -1,0,-1,0,68,2\nDATA -1,0,-1,0,70,2\nDATA -1,0,-1,0,-1,0\n",
    "icon": "galaxy",
    "postId": "MMU68feISZ"
 },
 {
    "name": "LowRes Racing 2",
    "sourceCode": "REM ********************\nREM LOWRES RACING 2\nREM BY TIMO KLOSS\nREM RACING GAME\nREM COLLECT COINS AND AVOID CAR CRASHES!\nREM USE LEFT\/RIGHT FOR CONTROL\nREM OR ALTERNATIVELY A\/B BUTTONS FOR RIGHT\nREM ********************\n\nRANDOMIZE TIMER\n\nPERSIST HISCORE\nDIM NT(2,2),ARR(15)\n\nRESTORE SPRITES\nFOR N=0 TO 6\n  FOR I=0 TO 15\n    READ ARR(I)\n  NEXT I\n  READ C0,C1,C2,C3\n  DEF SPRITE N,ARR,C1,C2,C3\nNEXT N\n\nREM MUSIC INSTRUMENTS\nDEF SOUND 1,2,0.5\nDEF SOUND 2,0\nDEF SOUND 3,3,0,0.1\nDEF SOUND 4,3,0,0.08\n\nREM SOUND FX\nDEF SOUND 10,2,0.5\nDEF SOUND 11,2,0.3\nDEF SOUND 12,2,0.1\nDEF SOUND 13,1\nDEF SOUND 14,3\nDEF SOUND LINE 14,0.5,24,0\n\nGAMEINTRO:\n\nGAMEPAD 0\nSPRITE OFF\n\nREM DRAWS TITLE BACKGROUND\nCOLOR 9\nBAR 0,31 TO 63,63\nCOLOR 10\nFOR I=1 TO 20\n  PLOT RND*64,RND*31+31\nNEXT I\nCOLOR 3\nFOR Y=0 TO 32\n  BAR 30-Y,31+Y TO 33+Y,31+Y\nNEXT Y\nFONT 3\nCOLOR 1,,0\nTEXT 31,32,\"II\",1,1\n\nSPRITE 0,4,26,5\nSPRITE 1,53,26,6\n\nRESTORE MUSIC\nGOSUB PLAYSONG\n\nFONT 0\nCOLOR 2\nTEXT 32,51,\"HI:\"+HISCORE,1\n\nC=8\nREPEAT\n  COLOR 11\n  BAR 0,0 TO 63,30\n\n  COLOR 1\n  FONT 2\n  TEXT 31,8,\"LOWRES\",1,1\n  TEXT 31,16,\"RACING\",1,1\n\n  REM RENDERS WAVE EFFECT ON TEXT\n  SR=SR-0.2\n  FOR SX=0 TO 63\n    SCROLL SX,0 TO SX,30,0,SIN(SR+SX\/64*PI)*8\n  NEXT SX\n\n  C=C-1\n  IF C=5 THEN C=8\n  COLOR C\n  FONT 0\n  TEXT 31,57,\"PRESS BUTTON\",1\n\n  WAIT 0.04\nUNTIL BUTTON TAP(0)\n\nSOUND OFF\nSPRITE OFF\n\nSTART:\n\nREM INITIALIZES GAME VARIABLES\nCARX=28\nCARY=52\nBLOCKY=0\nSCORE=0\nBLOCKISBAD=FALSE\nLEVEL=1\nLIVES=3\n\nCLS\nFOR I=1 TO 31\n  GOSUB SCROLLBG\nNEXT I\nGOSUB HUD\n\nREM TREES\nSPRITE 4,2,0,5\nSPRITE 5,54,32,6\n\nGAMEPAD 1\n\nDO\n  GOSUB SCROLLBG\n  \n  REM MOVE THE CAR\n  IF LEFT(0) AND CARX>16 THEN CARX=CARX-2\n  IF (RIGHT(0) OR BUTTON(0)) AND CARX<40 THEN CARX=CARX+2\n  SPRITE 1,CARX,CARY,0\n\n  REM RESET THE BLOCK WHEN REACHED BOTTOM\n  IF BLOCKY>62 THEN BLOCKY=0\n  IF BLOCKY=0 THEN\n    BLOCKX=16+RND*25\n    BLOCKISBAD=RND<0.3\n  END IF\n  \n  REM MOVE BLOCK\n  IF BLOCKISBAD THEN BIMG=1 ELSE BIMG=2\n  BLOCKY=BLOCKY+4\n  SPRITE 2,BLOCKX,BLOCKY-6,BIMG\n  \n  REM MOVE TREES\n  FOR I=4 TO 5\n    Y=SPRITE Y(I)\n    Y=Y+2\n    IF Y>63 THEN\n      SPRITE I,,-8-RND*8,INT(5+RND*2)\n    ELSE\n      SPRITE I,,Y\n    END IF\n  NEXT I\n\n  REM CHECK BLOCK COLLISION WITH CAR\n  IF SPRITE HIT(1,2) THEN\n    IF NOT BLOCKISBAD THEN\n      SPRITE 2,,,3\n      SCORE=SCORE+1\n      GOSUB HUD\n      SOUND 1,60,2,13\n      SOUND 1,67,2\n      SOUND 1,72,2\n    ELSE\n      SPRITE 0,CARX,CARY-5,4\n      SOUND 1,20,6,14\n      SOUND 0,1,0,10\n      LIVES=LIVES-1\n      WAIT 0.5\n      GOSUB HUD\n      IF LIVES=0 THEN EXIT ELSE SPRITE OFF 0\n    END IF\n    BLOCKY=0\n    IF SCORE MOD 5=0 THEN LEVEL=LEVEL+1\n  END IF\n  \n  SI=(SI+1) MOD 3\n  SOUND 0,MIN(20+LEVEL,96),0,10+SI\n\n  REM SPEED DEPENDS ON LEVEL\n  DELAY=0.08-(LEVEL\/100)\n  IF DELAY<0.04 THEN DELAY=0.04\n  WAIT DELAY\nLOOP\n\nREM GAME OVER!\nGAMEPAD 0\nIF SCORE>HISCORE THEN\n  HISCORE=SCORE\n  ENDTXT$=\"NEW HIGHSCORE\"\nELSE\n  ENDTXT$=\"GAME OVER\"\nEND IF\nSOUND 0,1,0,10\nSOUND 1,14,6\nC=8\nLAYER 1\nREPEAT\n  COLOR C\n  C=C-1\n  IF C=5 THEN C=8\n  TEXT 31,20,ENDTXT$,1\n  TEXT 31,40,\"PRESS BUTTON\",1\n  WAIT 0.1\nUNTIL BUTTON TAP(0)\nCLS\nLAYER 0\nGOTO GAMEINTRO\n\n\nSCROLLBG:\n\nSCROLL 0,0 TO 63,63,0,2\n\nREM DRAW THE GREEN SIDES\nCOLOR 9\nBAR 0,0 TO 15,1\nBAR 47,0 TO 63,1\nCOLOR 10\nIF RND<0.2 THEN PLOT RND*16,0\nIF RND<0.2 THEN PLOT 47+RND*17,0\n\nREM DRAW THE STREET\nCOLOR 3\nBAR 16,0 TO 46,1\n\nREM DRAW THE SIDE LINES\nIF STREETC<2 THEN COLOR 4 ELSE COLOR 1\nSTREETC=STREETC+1\nIF STREETC=4 THEN STREETC=0\nBAR 15,0 TO 15,1\nBAR 47,0 TO 47,1\nIF STREETC<2 THEN\n  COLOR 2\n  BAR 25,0 TO 25,1\n  BAR 37,0 TO 37,1\nEND IF\n\nRETURN\n\n\nHUD:\nLAYER 1\nCLS\nCOLOR 1\nTEXT 31,1,SCORE,1\nCOLOR 13\nFOR I=0 TO LIVES-2\nBAR 1+I*3,1 TO I*3+2,3\nNEXT I\nLAYER 0\nRETURN\n\n\nPLAYSONG:\nMTEMPO=4\nIOFF=0\nFOR I=0 TO 33\n  FOR C=0 TO 2\n    READ PTCH,INST\n    IF PTCH>-1 THEN\n      IF NT(C,2)>0 THEN\n        SOUND C,NT(C,0),NT(C,2)*MTEMPO,NT(C,1)\n      END IF\n      NT(C,0)=PTCH\n      NT(C,1)=INST+IOFF\n      NT(C,2)=1\n    ELSE\n      NT(C,2)=NT(C,2)+1\n    END IF\n  NEXT C\nNEXT I\nFOR C=0 TO 2\n  IF NT(C,2)>0 THEN\n    SOUND C,NT(C,0),NT(C,2)*MTEMPO,NT(C,1)\n  END IF\n  NT(C,0)=0\n  NT(C,1)=0\n  NT(C,2)=0\nNEXT C\nRETURN\n\n\nMUSIC:\nDATA 58,1,27,2,25,4\nDATA -1,0,39,2,-1,0\nDATA -1,0,27,2,73,3\nDATA -1,0,39,2,-1,0\nDATA 54,1,27,2,25,4\nDATA 51,1,39,2,-1,0\nDATA -1,0,27,2,73,3\nDATA 0,0,39,2,25,4\nDATA 58,1,27,2,25,4\nDATA -1,0,39,2,-1,0\nDATA 0,0,27,2,73,3\nDATA 49,1,39,2,-1,0\nDATA -1,0,27,2,25,4\nDATA 0,0,39,2,-1,0\nDATA 51,1,27,2,73,3\nDATA -1,0,39,2,-1,0\nDATA 58,1,30,2,25,4\nDATA -1,0,42,2,-1,0\nDATA -1,0,30,2,73,3\nDATA -1,0,42,2,-1,0\nDATA 54,1,30,2,25,4\nDATA 58,1,42,2,-1,0\nDATA -1,0,30,2,73,3\nDATA 0,0,42,2,25,4\nDATA 56,1,32,2,25,4\nDATA -1,0,44,2,-1,0\nDATA 0,0,32,2,73,3\nDATA 54,1,44,2,-1,0\nDATA -1,0,32,2,25,4\nDATA 0,0,44,2,-1,0\nDATA 56,1,32,2,73,3\nDATA -1,0,44,2,25,3\nDATA 51,1,27,2,25,4\nDATA -1,0,-1,0,-1,0\nDATA 0,0,0,0,-1,0\n\n\nSPRITES:\nDATA 42,160,234,172,229,108,37,96,42,160,234,172,229,108,42,160\nDATA 0,11,13,0\nDATA 42,160,229,108,234,172,42,160,37,96,229,108,234,172,42,160\nDATA 0,1,4,0\nDATA 37,128,150,96,90,80,86,80,150,96,37,128,0,0,0,0\nDATA 0,8,7,3\nDATA 66,4,32,32,0,0,128,8,0,0,32,32,66,4,0,0\nDATA 0,8,7,3\nDATA 128,0,10,130,9,96,37,88,37,88,40,160,128,0,0,32\nDATA 0,1,2,4\nDATA 5,0,31,64,117,80,87,80,117,80,21,64,10,0,10,0\nDATA 0,10,5,9\nDATA 1,0,5,64,7,64,21,80,29,80,85,84,21,80,2,0\nDATA 0,10,5,9\n",
    "icon": "racing2",
    "postId": "O30zBRVGql"
 },
 {
    "name": "LowRes Tennis",
    "sourceCode": "REM ********************\nREM LOWRES TENNIS 1.1\nREM BY TIMO KLOSS\nREM CLASSIC TENNIS VIDEO GAME\nREM NOTE: SECOND PLAYER CONTROLS WITH A AND B BUTTONS\nREM ********************\n\nGAMEPAD 1\nNPLAYERS=1\n\nMENU:\nSOUND 0,40,4,2\nSOUND 0,44,4\nSOUND 0,47,4\nSOUND 0,52,4\n\nX=31\nD=1\nREPEAT\n  IF UP(0) THEN NPLAYERS=1\n  IF DOWN(0) THEN NPLAYERS=2\n\n  CLS 0\n\n  REM DRAWS MOVING TITLE TEXT\n  X=X+D\n  IF X>=36 OR X<=26 THEN D=-D\n  TEXT X,4,\"LOWRES TENNIS\",1\n\n  REM DRAWS PLAYER MENU\n  REM CURRENT SELECTION BLINKS\n  IF NPLAYERS=2 OR B THEN TEXT 31,35,\"1 PLAYER\",1\n  IF NPLAYERS=1 OR B THEN TEXT 31,41,\"2 PLAYERS\",1\n  B=NOT B\n\n  WAIT 0.1\nUNTIL BUTTON TAP(0)\n\nREM INITIALIZES GAME VARIABLES\nY1=30\nY2=30\nPDIRX=-1\nSCORE1=0\nSCORE2=0\n\nDO\n  REM SETS BALL START POSITION FOR LEFT OR RIGHT PLAYER\n  IF PDIRX=1 THEN\n    PX=2\n    PY=Y1\n  ELSE\n    PX=60\n    PY=Y2\n  END IF\n\n  REM RANDOM BALL ANGLE\n  PDIRY=RND*2-1\n\n  SOUND 0,50,2,2\n\n  DO\n    REM PLAYER 1 CONTROL\n    IF UP(0) AND Y1>4 THEN Y1=Y1-2\n    IF DOWN(0) AND Y1<58 THEN Y1=Y1+2\n\n    REM PLAYER 2 CONTROL BY USER OR CPU\n    IF NPLAYERS=1 THEN\n      IF Y2>PY AND Y2>4 THEN Y2=Y2-2\n      IF Y2<PY AND Y2<58 THEN Y2=Y2+2\n    ELSE\n      IF BUTTON(0,2) AND Y2>4 THEN Y2=Y2-2\n      IF BUTTON(0,1) AND Y2<58 THEN Y2=Y2+2\n    END IF\n\n    REM MOVES BALL POSITION\n    PX=PX+PDIRX*2\n    PY=PY+PDIRY*2\n\n    REM BALL BOUNCES OFF FROM UPPER AND LOWER BORDERS\n    IF PY<=0 AND PDIRY<0 OR PY>=62 AND PDIRY>0 THEN\n      PDIRY=-PDIRY\n      SOUND 0,20,1,2\n    END IF\n    IF PY<0 THEN PY=0\n    IF PY>62 THEN PY=62\n\n    REM CHECKS BALL COLLISION FOR PLAYER 1\n    IF PX<=2 AND PDIRX<0 THEN\n      IF PY>Y1-5 AND PY<Y1+5 THEN\n        PDIRX=1\n        PDIRY=PDIRY+(PY-Y1)\/4\n        SOUND 0,44,1,2\n      END IF\n      IF PX<0 THEN\n        SCORE2=SCORE2+1\n        EXIT\n      END IF\n    END IF\n\n    REM CHECKS BALL COLLISION FOR PLAYER 2\n    IF PX>=60 AND PDIRX>0 THEN\n      IF PY>Y2-5 AND PY<Y2+5 THEN\n        PDIRX=-1\n        PDIRY=PDIRY+(PY-Y2)\/4\n        SOUND 0,45,1,2\n      END IF\n      IF PX>63 THEN\n        SCORE1=SCORE1+1\n        EXIT\n      END IF\n    END IF\n\n    CLS 0\n\n    REM DRAWS PLAYER 1\n    BAR 0,Y1-4 TO 1,Y1+5\n\n    REM DRAWS PLAYER 2\n    BAR 62,Y2-4 TO 63,Y2+5\n\n    REM DRAWS BALL\n    BAR PX,PY TO PX+1,PY+1\n\n    WAIT 0.05\n  LOOP\n\n  REM BALL OUT!\n\n  SOUND 0,40,4,2\n  SOUND 0,36,6\n\n  REM SHOWS SCORES\n  COLOR 1\n  TEXT 15,4,SCORE1,1\n  TEXT 47,4,SCORE2,1\n  WAIT 1\n\n  REM CHECKS FOR END OF MATCH AND SHOWS WINNER\n  IF SCORE1=7 OR SCORE2=7 THEN\n    IF SCORE1>SCORE2 THEN X=15 ELSE X=47\n    TEXT X,10,\"WINNER\",1\n    WAIT 2\n    GOTO MENU\n  END IF\n\nLOOP\n",
    "icon": "tennis",
    "postId": "TtoVXfDxbg"
 },
 {
    "name": "LowRes Snake 2",
    "sourceCode": "REM ********************\nREM LOWRES SNAKE 2.2\nREM BY TIMO KLOSS\nREM SNAKE GAME\nREM COLLECT BLINKING DOTS AND DON'T HIT YOURSELF!\nREM ********************\n\nPERSIST HISCORE\n\nMAXLEN=1000\nDIM TX(MAXLEN),TY(MAXLEN)\nBO=10\n\nD=1\n\nDO\n  REM THE TITLE SCREEN\n\n  GAMEPAD 0\n\n  CLS 9\n  COLOR 10\n  FOR I=1 TO 20\n    PLOT RND*64,RND*64\n  NEXT I\n\n  T$=\"LOWRES SNAKE 2\"\n  COLOR 10\n  TEXT 31,11,T$,1\n  COLOR 1\n  TEXT 31,10,T$,1\n\n  COLOR 1\n  TEXT 32,33,\"HI:\"+HISCORE,1\n\n  GOSUB PLAYMUSIC\n\n  REPEAT\n    GOSUB BLINK\n    TEXT 31,40,\"PRESS BUTTON\",1\n    WAIT 0.1\n  UNTIL BUTTON TAP(0)\n\n  REM THE GAME\n\n  REM PAINTS GREEN SCREEN WITH WHITE BORDER\n  CLS 10\n  COLOR 9\n  BAR BO,BO TO 63-BO,63-BO\n  COLOR 1\n  BOX BO,BO TO 63-BO,63-BO\n\n  REM RESET GAME\n  TLEN=8\n  TI=0\n  FOR I=0 TO MAXLEN\n    TX(I)=0\n  NEXT I\n  X=31\n  Y=31\n  SCORE=0\n  TIME=0\n\n  GOSUB PLACEDOT\n  GOSUB DRAWINFO\n\n  GAMEPAD 1\n\n  DO\n    REM CHECKS FOR DIRECTION CHANGES\n    IF LEFT(0) AND D<>2 THEN\n      D=1\n    ELSE IF RIGHT(0) AND D<>1 THEN\n      D=2\n    ELSE IF UP(0) AND D<>4 THEN\n      D=3\n    ELSE IF DOWN(0) AND D<>3 THEN\n      D=4\n    END IF\n\n    REM MOVES SNAKE IN CURRENT DIRECTION\n    IF D=1 THEN X=X-1\n    IF D=2 THEN X=X+1\n    IF D=3 THEN Y=Y-1\n    IF D=4 THEN Y=Y+1\n\n    REM CHECKS FOR COLLISION\n    IF POINT(X,Y)=1 THEN EXIT\n\n    REM CHECKS FOR COLLECT\n    IF X=DX AND Y=DY THEN\n      SCORE=SCORE+1\n      GOSUB SNDCOLLECT\n      TLEN=TLEN+8\n      IF TLEN>=MAXLEN THEN TLEN=MAXLEN-1\n      GOSUB PLACEDOT\n    END IF\n\n    REM DRAWS HEAD OF SNAKE AT CURRENT POSITION\n    COLOR 1\n    PLOT X,Y\n\n    REM STORE CURRENT POSITION AND HANDLE TAIL\n    TX(TI)=X\n    TY(TI)=Y\n    TEI=((TI-TLEN)+MAXLEN) MOD MAXLEN\n    IF TX(TEI)<>0 THEN\n      COLOR 9\n      PLOT TX(TEI),TY(TEI)\n    END IF\n    TI=(TI+1) MOD MAXLEN\n\n    REM DRAWS BLINKING DOT TO COLLECT\n    GOSUB BLINK\n    PLOT DX,DY\n\n    GOSUB DRAWINFO\n\n    WAIT 0.1\n    TIME=TIME+0.1\n  LOOP\n\n  REM GAME OVER!\n\n  GOSUB SNDHIT\n  GAMEPAD 0\n\n  IF SCORE>HISCORE THEN\n    HISCORE=SCORE\n    ENDTXT$=\"NEW HIGHSCORE\"\n  ELSE\n    ENDTXT$=\"GAME OVER\"\n  END IF\n\n  REPEAT\n    GOSUB BLINK\n    TEXT 31,58,ENDTXT$,1\n    WAIT 0.1\n  UNTIL BUTTON TAP(0)\n\nLOOP\n\nPLACEDOT:\nREM SETS NEW POSITION FOR DOT\nDX=INT(BO+1+RND*(61-2*BO))\nDY=INT(BO+1+RND*(61-2*BO))\nRETURN\n\nBLINK:\nREM TOGGLES BETWEEN COLORS\nIF C=6 THEN C=7 ELSE C=6\nCOLOR C\nRETURN\n\nDRAWINFO:\nCOLOR 10\nBAR 0,0 TO 63,BO-1\nCOLOR 1\nTEXT BO,1,SCORE\nS=INT(TIME)\nM=INT(S\/60)\nS=S MOD 60\nIF S<10 THEN D$=\":0\" ELSE D$=\":\"\nTEXT 63-BO,1,M+D$+S,2\nRETURN\n\nPLAYMUSIC:\nSOUND 0,53,12\nSOUND 0,56,6\nSOUND 0,49,6\nSOUND 0,54,6\nSOUND 0,53,6\nSOUND 0,51,6\nSOUND 0,53,6\nSOUND 0,49,6\nSOUND 0,0,6\nSOUND 0,61,6\nSOUND 1,37,12\nSOUND 1,25,12\nSOUND 1,32,12\nSOUND 1,29,12\nSOUND 1,25,6\nRETURN\n\nSNDCOLLECT:\nFOR I=0 TO 2\n  SOUND 2,50+I*5+SCORE MOD 5,2\n  SOUND 2,46+I*6+SCORE MOD 5,2\nNEXT I\nRETURN\n\nSNDHIT:\nSOUND 0,56,6\nSOUND 0,55,6\nSOUND 0,54,6\nSOUND 1,25,6\nSOUND 1,24,6\nSOUND 1,23,6\nRETURN\n",
    "icon": "snake",
    "postId": "oq4bKfmFo9"
 },
 {
     "name": "LowRes Adventure",
     "sourceCode": "RANDOMIZE TIMER\n\nDISPLAY 4\nLAYER OPEN 0,128,128,0\nCOLOR 1,12\n\nSTART:\nHEALTH=10\nNAME$=\"\"\nKEY=FALSE\n\nGOSUB TITLESONG\nCLS\nFONT 3\nPRINT \"-======**======-\"\nPRINT \"LOWRES ADVENTURE\"\nPRINT \"-======**======-\"\nPRINT\nFONT 0\nGOSUB STATUS\nPRINT \"YOU ARRIVE AT THE KING'S CASTLE.\"\nPRINT \"KING: FINALLY YOU ARE HERE TO\"\nPRINT \"RESCUE OUR COUNTRY! THE GHOSTS\"\nPRINT \"FROM THE SHADOW LAND CAME AND\"\nPRINT \"STOLE MY CROWN WHEN I WAS\"\nPRINT \"SLEEPING!\"\nPRINT \"THEY SAY YOU ARE THE ONLY ONE\"\nPRINT \"WHO CAN HELP US. WHAT IS YOUR\"\nPRINT \"NAME?\"\nREPEAT\n  INPUT \">\";NAME$\nUNTIL LEN(NAME$)>0\n\nPRINT\nPRINT \"KING: SO, \"+NAME$+\", I HAVE\"\nPRINT \"CHOSEN YOU TO BRING BACK MY\"\nPRINT \"CROWN. BUT BE CAREFUL, THE\"\nPRINT \"SHADOW LAND IS DANGEROUS!\"\nPRINT \"ARE YOU READY?\"\nPRINT \"1. YES!\"\nPRINT \"2. NO, THANKS\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN GOTO CITY\n  IF A=2 THEN GOTO CASTLENO\nLOOP\n\nCASTLENO:\nPRINT\nPRINT \"KING: WELL OK, I GUESS IT'S\"\nPRINT \"FINE, I DON'T REALLY NEED MY\"\nPRINT \"CROWN.\"\nGOTO GAMEOVER\n\nCITY:\nPRINT\nPRINT \"YOU ARE IN THE KING'S CITY.\"\nPRINT \"FROM HERE YOU HAVE SEVERAL WAYS.\"\nPRINT \"1. GO TO SHADOW LAND\"\nPRINT \"2. GO TO RIVER\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN GOTO SHADOW\n  IF A=2 THEN GOTO RIVER\nLOOP\n\nSHADOW:\nPRINT\nPRINT \"A DARK AND SCARY PATH LEADS YOU\"\nPRINT \"TO A GIANT DOOR OF A BLACK\"\nPRINT \"MOUNTAIN.\"\nPRINT \"1. OPEN DOOR\"\nPRINT \"2. RETURN TO CITY\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN\n    IF KEY THEN GOTO SHADOWOPEN ELSE GOTO SHADOWLOCKED\n  END IF\n  IF A=2 THEN GOTO CITY\nLOOP\n\nSHADOWLOCKED:\nPRINT\nPRINT \"THE DOOR IS LOCKED, YOU NEED A\"\nPRINT \"KEY. YOU DECIDE TO RETURN TO THE\"\nPRINT \"CITY.\"\nINPUT \"> PRESS ENTER\";A\nGOTO CITY\n\nSHADOWOPEN:\nPRINT\nPRINT \"YOU OPEN THE DOOR WITH YOUR KEY\"\nPRINT \"AND ENTER A GIANT CAVE. AT THE\"\nPRINT \"END OF THE CAVE YOU SEE A GHOST\"\nPRINT \"WITH THE CROWN OF YOUR KING ON\"\nPRINT \"HIS HEAD.\"\nPRINT \"1. ATTACK GHOST\"\nPRINT \"2. TALK WITH GHOST\"\nPRINT \"3. RETURN TO CITY\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN GOTO GHOSTATTACK\n  IF A=2 THEN GOTO GHOSTTALK\n  IF A=3 THEN GOTO CITY\nLOOP\n\nGHOSTATTACK:\nPRINT\nPRINT \"THE FINAL FIGHT WITH THE GHOST\"\nPRINT \"OF THE SHADOW LAND BEGINS.\"\nENEMYHEALTH=5\nGOSUB FIGHT\nPRINT\nIF ENEMYHEALTH=0 THEN\n  GOTO GHOSTDEFEATED\nELSE\n  PRINT \"YOU RUN AWAY FROM THE MOUNTAIN.\"\n  INPUT \"> PRESS ENTER\";A\n  GOTO CITY\nEND IF\n\nGHOSTDEFEATED:\nPRINT\nPRINT \"GHOST:OKAY, OKAY, STOP PLEASE!\"\nPRINT \"WHAT DO YOU WANT?\"\nPRINT \"YOU: THE KING'S CROWN!\"\nPRINT \"GHOST: AH, WHY DIDN'T YOU TELL IT\"\nPRINT \"BEFORE?! I DON'T LIKE IT ANYWAY.\"\nPRINT \"HERE, TAKE IT!\"\nPRINT \"YOU: OH, THANKS! SORRY FOR THAT\"\nPRINT \"LITTLE FIGHT. I DIDN'T WANT TO\"\nPRINT \"OFFEND YOU.\"\nPRINT \"GHOST: DON'T WORRY. SEE YOU SOON.\"\nINPUT \"> PRESS ENTER\";A\nGOTO GAMEEND\n\nGHOSTTALK:\nPRINT\nPRINT \"GHOST: HELLO \"+NAME$+\",\"\nPRINT \"HOW ARE YOU? I SEE YOU FOUND THE\"\nPRINT \"KEY TO MY MOUNTAIN, NOT BAD.\"\nPRINT \"WHAT DID YOU COME FOR?\"\nPRINT \"1. TO DEFEAT YOU!\"\nPRINT \"2. TO ASK FOR THE CROWN\"\nPRINT \"3. NOTHING, BYE!\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN GOTO GHOSTATTACK\n  IF A=2 THEN GOTO GHOSTCROWN\n  IF A=3 THEN GOTO CITY\nLOOP\n\nGHOSTCROWN:\nPRINT\nPRINT \"GHOST: YEAH, YOU KNOW, I FOUND\"\nPRINT \"IT SOMEWHERE ON THE STREET. IT\"\nPRINT \"ACTUALLY DOESN'T FIT ME VERY\"\nPRINT \"WELL. YOU CAN HAVE IT, NO\"\nPRINT \"PROBLEM.\"\nPRINT \"YOU: OH COOL, THANKS!\"\nINPUT \"> PRESS ENTER\";A\nGOTO GAMEEND\n\nRIVER:\nPRINT\nPRINT \"YOU ARE AT THE RIVER. THERE IS A\"\nPRINT \"BIG WATERFALL.\"\nPRINT \"1. GO FISHING\"\nPRINT \"2. GO BEHIND WATERFALL\"\nPRINT \"3. RETURN TO CITY\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN GOTO FISHING\n  IF A=2 THEN GOTO WATERFALL\n  IF A=3 THEN GOTO CITY\nLOOP\n\nFISHING:\nPRINT\nR=RND\nIF R<0.1 THEN\n  PRINT \"YOU FISH AN OLD SHOE. JUST IN\"\n  PRINT \"CASE YOU LOOK INSIDE AND YOU\"\n  PRINT \"FIND A SPECIAL HEALING POTION!\"\n  HEALTH=HEALTH+4\nELSE IF R<0.6 THEN\n  PRINT \"YOU JUMP INTO THE WATER AND GRAB\"\n  PRINT \"A FISH WITH YOUR HANDS. IT LOOKS\"\n  PRINT \"TASTY AND YOU EAT IT.\"\n  HEALTH=HEALTH+1\nELSE\n  PRINT \"YOU TRY TO CATCH A FISH BUT IT\"\n  PRINT \"BITES YOU IN THE HAND AND YOU\"\n  PRINT \"FALL UNFAVORABLY.\"\n  HEALTH=HEALTH-2\nEND IF\nGOSUB STATUS\nINPUT \"> PRESS ENTER\";A\nGOTO RIVER\n\nWATERFALL:\nPRINT\nPRINT \"BEHIND THE WATERFALL YOU FIND THE\"\nPRINT \"ENTRANCE TO A CAVE. FROM INSIDE\"\nPRINT \"YOU CAN HEAR SOME STRANGE\"\nPRINT \"SOUNDS.\"\nPRINT \"1. ENTER CAVE\"\nPRINT \"2. RETURN TO RIVER\"\nDO\n  INPUT \">\";A\n  IF A=1 THEN GOTO CAVE\n  IF A=2 THEN GOTO RIVER\nLOOP\n\nCAVE:\nPRINT\nPRINT \"A CAVE MONSTER ATTACKS YOU!\"\nENEMYHEALTH=3\nGOSUB FIGHT\nPRINT\nIF ENEMYHEALTH=0 THEN\n  PRINT \"THE MONSTER FEELS QUITE BAD AND\"\n  PRINT \"GOES TO SLEEP. YOU FIND A KEY IN\"\n  PRINT \"THE CAVE AND TAKE IT.\"\n  KEY=TRUE\nELSE\n  PRINT \"YOU RUN AWAY FROM THE CAVE.\"\nEND IF\nINPUT \"> PRESS ENTER\";A\nGOTO RIVER\n\nGAMEEND:\nPRINT\nPRINT \"YOU RETURN TO THE KING'S CASTLE\"\nPRINT \"AND GIVE THE CROWN BACK TO HIM.\"\nPRINT \"KING: WELL DONE, \"+NAME$+\"!\"\nPRINT \"NOW PEACE AND HARMONY WILL\"\nPRINT \"RETURN TO OUR LAND.\"\nPRINT \"YOU: YEAH, SURE.\"\nPRINT\nPRINT \"YOU GO HOME AND WATCH TV.\"\nPRINT\nGOSUB STATUS\nPRINT\nFONT 3\nPRINT \"THE END\"\nFONT 0\nGOSUB TITLESONG\nGOTO RESTART\n\n\nFIGHT:\nDO\n  PRINT\n  IF RND<0.5 THEN\n    PRINT \"THE ENEMY HITS YOU!\"\n    SOUND 0,32,2,3\n    HEALTH=HEALTH-1\n  ELSE\n    PRINT \"YOU AVOID THE ENEMY'S ATTACK.\"\n    SOUND 0,32,2,0\n    SOUND 0,39,2\n  END IF\n  GOSUB STATUS\n  PRINT \"> (A)TTACK OR (F)LEE?\"\n  DO\n    I$=INKEY$\n    IF I$=\"A\" THEN EXIT\n    IF I$=\"F\" THEN RETURN\n    WAIT 0.1\n  LOOP\n  PRINT\n  IF RND<0.6 THEN\n    PRINT \"YOU HIT THE ENEMY!\"\n    SOUND 0,39,2,3\n    ENEMYHEALTH=ENEMYHEALTH-1\n    IF ENEMYHEALTH=0 THEN RETURN\n  ELSE\n    PRINT \"THE ENEMY AVOIDS YOUR ATTACK.\"\n    SOUND 0,37,2,0\n    SOUND 0,30,2\n  END IF\n  PRINT \"-- ENEMY'S HEALTH: \"+ENEMYHEALTH+\" --\"\nLOOP\nRETURN\n\n\nSTATUS:\nIF HEALTH<0 THEN HEALTH=0\nPRINT \"-- HEALTH \"+HEALTH+\" --\"\nIF HEALTH=0 THEN RETURN GAMEOVER\nRETURN\n\nGAMEOVER:\nPRINT\nFONT 3\nPRINT \"GAME OVER\"\nGOSUB GAMEOVERSONG\nFONT 0\n\nRESTART:\nPRINT \"> RESTART? (Y\/N)\"\nDO\n  I$=INKEY$\n  IF I$=\"Y\" THEN GOTO START\n  IF I$=\"N\" THEN END\n  WAIT 0.1\nLOOP\n\nTITLESONG:\nSOUND 0,37,5,0\nSOUND 0,25,5\nSOUND 0,41,5\nSOUND 0,39,5\nSOUND 0,27,5\nSOUND 0,42,5\nSOUND 0,41,5\nSOUND 0,29,5\nSOUND 0,44,5\nSOUND 0,42,5\nSOUND 0,39,5\nSOUND 0,41,5\nSOUND 0,37,10\nSOUND 0,25,10\nRETURN\n\nGAMEOVERSONG:\nSOUND 0,44,5,0\nSOUND 0,43,5\nSOUND 0,42,5\nSOUND 0,41,5\nSOUND 0,40,10\nRETURN\n",
     "icon": "adventure",
     "postId": "c1Tg27M1h0"
 },
 {
    "name": "Parallax Scroller",
    "sourceCode": "REM ********************\nREM PARALLAX SCROLLER\nREM BY TIMO KLOSS\nREM DEMO WITH PARALLAX SCROLLING AND MUSIC\nREM ********************\n\nREM CREATE DIFFERENT LAYERS\nDISPLAY 3\nLAYER OPEN 0,128,64,0\nLAYER OPEN 1,128,64,1\nLAYER OPEN 2,128,64,1\nLAYER OPEN 3,72,10,1\n\nREM THE TEXT FOR THE SCROLLER\nREM YOU CAN PUT YOUR OWN HERE!\nT$=\"WELCOME TO LOWRES CODER! PLAY HOMEGROWN RETRO GAMES AND PROGRAM YOUR OWN! HAVE FUN :)       \"\n\nREM INITIALIZE MUSIC\nDIM SNGARR(15,2),SNGCHA(63,15,1),SNGPHR(63,15,1),SNGPLAYER(2,1)\nGOSUB INITINSTRUMENTS\nRESTORE DEMOSONG\nGOSUB READSONG\n\nREM DRAW BACKGROUND LAYER\nLAYER 0\nCLS 13\nREM SOME STARS\nCOLOR 12\nFOR I=1 TO 10\n  PLOT RND*64,RND*34\nNEXT I\nREM LANDSCAPE SHAPE\nCOLOR 0\nLINE 0,42 TO 32,34\nLINE 32,34 TO 64,42\nREM DUPLICATE IMAGE FOR ENDLESS SCROLLING\nGET BLOCK 0,0,0 TO 63,63\nPUT BLOCK 0,64,0\nCOLOR 12\nPAINT 0,63\n\nREM DRAW FIRST PARALLAX LAYER\nLAYER 1\nCOLOR 11\nFOR I=1 TO 10\n  PLOT RND*64,RND*26\nNEXT I\nCOLOR 5\nLINE 0,36 TO 24,45\nLINE 24,45 TO 48,48\nLINE 48,48 TO 64,36\nGET BLOCK 0,0,0 TO 63,63\nPUT BLOCK 0,64,0\nCOLOR 15\nPAINT 0,63\n\nREM DRAW SECOND PARALLAX LAYER\nLAYER 2\nCOLOR 1\nFOR I=1 TO 4\n  PLOT RND*64,RND*18\nNEXT I\nCOLOR 5\nLINE 0,58 TO 12,50\nLINE 12,50 TO 24,60\nLINE 24,60 TO 48,52\nLINE 48,52 TO 64,58\nGET BLOCK 0,0,0 TO 63,63\nPUT BLOCK 0,64,0\nCOLOR 14\nPAINT 0,63\n\nREM PREPARE TEXT LAYER\nLAYER 3\nPALETTE 15,0\nFONT 3\nCOLOR ,,15\nCOL=1\n\nDIM OFFX(3)\n\nREM MAIN LOOP\n\nDO\n  GOSUB UPDATESONG\n  \n  REM MOVE PARALLAX LAYERS\n  FOR I=0 TO 2\n    LAYER OFFSET I,OFFX(I),0\n    OFFX(I)=OFFX(I)+2^I\n    IF OFFX(I)>=64 THEN OFFX(I)=OFFX(I)-64\n  NEXT I\n  \n  REM MOVE TEXT LAYER UP AND DOWN\n  S=S+0.1\n  LAYER DISPLAY 3,0,28+SIN(S)*20\n  \n  REM SCROLL TEXT TO LEFT\n  SCROLL 0,0 TO 72,8,-1,0 CLEAR\n  TX=TX+1\n  IF TX=8 THEN\n    REM DRAW NEXT LETTER\n    IF TP=LEN(T$) THEN TP=0\n    TP=TP+1\n    COLOR COL\n    COL=COL+1\n    IF COL=15 THEN COL=1\n    TEXT 64,1,MID$(T$,TP,1),0,2\n    TX=0\n  END IF\n  \n  REM CYCLE COLORS ON TEXT LAYER\n  CC=CC+1\n  FOR I=1 TO 14\n    PALETTE I,(CC+I) MOD 64\n  NEXT I\n  \n  WAIT 0.04\nLOOP\n\nREM MUSIC CODE FOLLOWS\n\nINITINSTRUMENTS:\nREM ** STANDARDS\nDEF SOUND 0,0\nDEF SOUND 1,1\nDEF SOUND 2,2\nDEF SOUND 3,3\nREM ** DRUMS\nDEF SOUND 8,2,0.5,0.1\nDEF SOUND LINE 8,0.1,24,0\nDEF SOUND 9,3,0,0.1\nDEF SOUND LINE 9,0.1,24,0\nDEF SOUND 10,3,0,0.05\nDEF SOUND 11,3,0,0.1\nDEF SOUND LINE 11,0.1,-24,0\nRETURN\n\nREADSONG:\nREM SNGTEMPO IS UNUSED BUT RESERVED\nREAD SNGTICKS,SNGTEMPO\nFOR SNGR=0 TO 15\n  FOR SNGV=0 TO 2\n    READ SNGARR(SNGR,SNGV)\n  NEXT SNGV\nNEXT SNGR\nDO\n  READ SNGC\n  IF SNGC=-1 THEN EXIT\n  FOR SNGCR=0 TO 15\n    FOR SNGI=0 TO 1\n      READ SNGCHA(SNGC,SNGCR,SNGI)\n    NEXT SNGI\n  NEXT SNGCR\nLOOP\nDO\n  READ SNGP\n  IF SNGP=-1 THEN EXIT\n  FOR SNGPR=0 TO 15\n    FOR SNGI=0 TO 1\n      READ SNGPHR(SNGP,SNGPR,SNGI)\n    NEXT SNGI\n  NEXT SNGPR\nLOOP\nFOR SNGV=0 TO 2\n  SNGPLAYER(SNGV,0)=0\n  SNGPLAYER(SNGV,1)=FALSE\nNEXT SNGV\nSNGROW=0\nSOUND WAIT\nGOSUB UPDATESONG\nSOUND RESUME\nRETURN\n\nUPDATESONG:\nIF SOUND LEN>16 THEN RETURN\nIF SNGROW=16 THEN\n  SNGROW=0\nELSE IF SNGARR(SNGROW,0)=255 AND SNGARR(SNGROW,1) AND SNGARR(SNGROW,2)=255 THEN\n  SNGROW=0\nEND IF\nFOR SNGV=0 TO 2\n  SNGC=SNGARR(SNGROW,SNGV)\n  IF SNGC=255 THEN\n    SOUND SNGV,0,16*SNGTICKS\n  ELSE\n    SNGCR=SNGPLAYER(SNGV,0)\n    SNGP=SNGCHA(SNGC,SNGCR,0)\n    IF SNGP=255 THEN\n      SOUND SNGV,0,16*SNGTICKS\n    ELSE\n      SNGT=SNGCHA(SNGC,SNGCR,1)\n      SNGCURR=0\n      FOR SNGPR=0 TO 16\n        IF SNGPR<16 THEN SNGN=SNGPHR(SNGP,SNGPR,0) ELSE SNGN=0\n        IF SNGN<255 AND SNGPR>SNGCURR THEN\n          SNGN=SNGPHR(SNGP,SNGCURR,0)\n          SNGD=(SNGPR-SNGCURR)*SNGTICKS\n          IF SNGN=0 OR SNGN=255 THEN\n            SOUND SNGV,0,SNGD\n          ELSE\n            SNGS=SNGPHR(SNGP,SNGCURR,1)\n            SOUND SNGV,SNGN+SNGT,SNGD,SNGS\n          END IF\n          SNGCURR=SNGPR\n        END IF\n      NEXT SNGPR\n    END IF\n  END IF\nNEXT SNGV\nSNGRDONE=TRUE\nFOR SNGV=0 TO 2\n  SNGC=SNGARR(SNGROW,SNGV)\n  IF SNGC<255 THEN\n    SNGCR=SNGPLAYER(SNGV,0)+1\n    IF SNGCR<16 THEN SNGP=SNGCHA(SNGC,SNGCR,0) ELSE SNGP=255\n    IF SNGP=255 THEN\n      SNGCR=0\n      SNGPLAYER(SNGV,1)=TRUE\n    END IF\n    SNGPLAYER(SNGV,0)=SNGCR\n    IF NOT SNGPLAYER(SNGV,1) THEN SNGRDONE=FALSE\n  END IF\nNEXT SNGV\nIF SNGRDONE THEN\n  SNGROW=SNGROW+1\n  FOR SNGV=0 TO 2\n    SNGPLAYER(SNGV,0)=0\n    SNGPLAYER(SNGV,1)=FALSE\n  NEXT SNGV\nEND IF\nRETURN\n\n\nREM SONG MADE WITH LOWFI COMPOSER 2\n\nDEMOSONG:\nDATA 3,0\nDATA 0,10,255,0,10,20,0,10,20,0,11,255\nDATA 255,255,255,255,255,255,255,255,255,255,255,255\nDATA 255,255,255,255,255,255,255,255,255,255,255,255\nDATA 255,255,255,255,255,255,255,255,255,255,255,255\nDATA 0\nDATA 0,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 10\nDATA 10,0,10,0,11,0,12,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 11\nDATA 13,0,13,0,14,0,15,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 20\nDATA 20,0,21,0,22,0,23,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA 255,0,255,0,255,0,255,0\nDATA -1\nDATA 0\nDATA 25,10,25,10,37,9,255,255\nDATA 25,10,255,255,37,9,255,255\nDATA 25,10,25,10,37,9,255,255\nDATA 25,10,255,255,37,9,255,255\nDATA 10\nDATA 25,2,0,255,37,2,255,255\nDATA 0,255,36,2,255,255,35,2\nDATA 22,2,0,255,34,2,255,255\nDATA 0,255,39,2,255,255,0,255\nDATA 11\nDATA 20,2,0,255,32,2,255,255\nDATA 0,255,34,2,255,255,32,2\nDATA 17,2,0,255,29,2,255,255\nDATA 0,255,36,2,255,255,0,255\nDATA 12\nDATA 25,2,0,255,37,2,255,255\nDATA 0,255,36,2,255,255,35,2\nDATA 22,2,0,255,34,2,255,255\nDATA 0,255,255,255,255,255,255,255\nDATA 13\nDATA 27,2,0,255,39,2,255,255\nDATA 0,255,42,2,255,255,41,2\nDATA 22,2,0,255,34,2,255,255\nDATA 0,255,41,2,255,255,0,255\nDATA 14\nDATA 25,2,0,255,37,2,255,255\nDATA 0,255,39,2,255,255,37,2\nDATA 20,2,0,255,32,2,255,255\nDATA 0,255,37,2,255,255,0,255\nDATA 15\nDATA 22,2,0,255,34,2,255,255\nDATA 0,255,255,255,22,2,0,255\nDATA 34,2,0,255,34,2,0,255\nDATA 34,2,0,255,255,255,255,255\nDATA 20\nDATA 58,1,0,255,65,1,255,255\nDATA 0,255,255,255,70,1,0,255\nDATA 73,1,0,255,72,1,255,255\nDATA 68,1,0,255,70,1,255,255\nDATA 21\nDATA 68,1,0,255,65,1,255,255\nDATA 0,255,255,255,58,1,0,255\nDATA 61,1,0,255,60,1,255,255\nDATA 56,1,0,255,53,1,255,255\nDATA 22\nDATA 56,1,0,255,60,1,255,255\nDATA 0,255,255,255,61,1,255,255\nDATA 56,1,0,255,53,1,255,255\nDATA 49,1,0,255,44,1,255,255\nDATA 23\nDATA 46,1,255,255,255,255,255,255\nDATA 0,255,255,255,255,255,255,255\nDATA 58,1,57,1,56,1,55,1\nDATA 54,1,53,1,52,1,51,1\nDATA -1",
    "icon": "parallaxscroller",
    "postId": "pKGdm1l6MU"
 },
 {
    "name": "Sprites",
    "sourceCode": "REM MOVING SPRITES ON SCROLLING BACKGROUND\nREM VERSION 1.1\n\nDIM ARR(15),DIR(7,1)\n\nREM READ SPRITE IMAGE\nFOR I=0 TO 15\n  READ ARR(I)\nNEXT I\nREAD C0,C1,C2,C3\nDEF SPRITE 0,ARR,C1,C2,C3\n\nREM SET MOVE DIRECTIONS AND PREPARE SPRITES\nFOR I=0 TO 7\n  DIR(I,0)=RND*6-3\n  DIR(I,1)=RND*6-3\n  SPRITE I,28,28,0\nNEXT I\n\nREM FIRST 4 SPRITES WITH RANDOM PALETTE,\nREM THE OTHERS KEEP THEIR ORIGINAL COLORS.\nFOR I=0 TO 3\n  SPRITE PALETTE I,1+RND*15,1,1+RND*15\nNEXT I\n\nDO\n  REM MOVE ALL SPRITES\n  FOR I=0 TO 7\n    X=SPRITE X(I)+DIR(I,0)\n    Y=SPRITE Y(I)+DIR(I,1)\n    IF X>63 THEN X=-7\n    IF X<-7 THEN X=63\n    IF Y>63 THEN Y=-7\n    IF Y<-7 THEN Y=63\n    SPRITE I,X,Y,0\n  NEXT I\n\n  REM SCROLL BACKGROUND AND DRAW DOTS\n  SCROLL 0,0 TO 63,63,0,-1\n  COLOR 0\n  LINE 0,63 TO 63,63\n  COLOR 3\n  PLOT RND*64,63\n\n  WAIT 0.05\nLOOP\n\nREM IMAGE DATA FOR SPRITE\nDATA 80,5,164,26,6,144,2,128,1,64,21,84,208,7,240,15\nDATA 0,4,8,11\n",
    "icon": "sprites",
    "postId": "zN6cNJ7UJq"
 },
 {
    "name": "Easy Sprite Designer",
    "sourceCode":"REM ********************\nREM EASY SPRITE DESIGNER 1.1\nREM BY TIMO KLOSS\nREM IMAGE EDITOR TO CREATE SPRITES\nREM\nREM PRESS PAUSE TO SHOW OR HIDE MENU!\nREM\nREM BOTTOM BOX: DRAW COLOR (FIRST IS BACKGROUND)\nREM LEFT BOX: PALETTE COLOR FOR CURRENT DRAW COLOR\nREM BUTTON A: DRAW OR SELECT\nREM BUTTON B: TOGGLE BETWEEN SECTIONS\nREM\nREM YOUR CURRENT SPRITE IS ALWAYS STORED IN PERSISTENT MEMORY.\nREM YOU CAN WRITE IT TO TRANSFER FROM THE MENU.\nREM\nREM CHECK THE ADVANCED SPRITE DESIGNER BY TODDL, TOO!\nREM ********************\n\nREM UI IMAGE POSITION\nOX=16\nOY=1\nREM UI PALETTE POSITION\nPOX=1\nPOY=1\nREM UI PREVIEW POSITION\nPROX=55\nPROY=1\nSC=4\n\nDIM BYT(15)\nDIM PERSIST PXL(7,7),PAL(3)\nPERSIST INITIALIZED\nIF NOT INITIALIZED THEN\n  PAL(0)=0\n  PAL(1)=1\n  PAL(2)=2\n  PAL(3)=3\n  INITIALIZED=TRUE\nEND IF\nMO=0\nCOL=1\n\nGAMEPAD 1\nGOTO MEDITOR\n\n\nMMENU:\n\nON PAUSE GOTO MEDITOR\n\nCLS 6\nCOLOR 1\nTEXT 32,1,\"EASY\",1\nTEXT 32,7,\"SPRITE DESIGNER\",1\n\nS=0\nDO\n  IF UP(0) AND S>0 THEN S=S-1\n  IF DOWN(0) AND S<2 THEN S=S+1\n  IF BUTTON(0) THEN EXIT\n  \n  GOSUB BLINK\n  \n  IF S=0 AND BL THEN COLOR 1 ELSE COLOR 7\n  TEXT 32,31,\"WRITE SPRITE\",1\n  IF S=1 AND BL THEN COLOR 1 ELSE COLOR 7\n  TEXT 32,37,\"READ SPRITE\",1\n  IF S=2 AND BL THEN COLOR 1 ELSE COLOR 7\n  TEXT 32,43,\"NEW\",1\n  WAIT 0.25 TAP\nLOOP\n\nWHILE BUTTON(0)\n  WAIT 0.1\nWEND\n\nCLS\nIF S=0 THEN GOSUB SAVE\nIF S=1 THEN GOSUB LOAD\nIF S=2 THEN GOSUB CLEARSPRITE\n\n\nMEDITOR:\n\nON PAUSE GOTO MMENU\n\nCLS 0\nGOSUB DRAWALL\nDO\n  GOSUB BLINK\n\n  IF BUTTON TAP(0,2) THEN\n    MO=(MO+1) MOD 3\n    BL=FALSE\n    GOSUB DRAWALL\n  END IF\n\n  IF MO=0 THEN\n    GOSUB DRAWING\n  ELSE IF MO=1 THEN\n    GOSUB SELECTINGCOLOR\n  ELSE IF MO=2 THEN\n    GOSUB SELECTINGPALETTE\n  END IF\n\n  WAIT 0.3 TAP\nLOOP\nEND\n\nBLINK:\nBL=NOT BL\nIF UP(0) OR DOWN(0) OR LEFT(0) OR RIGHT(0) THEN BL=TRUE\nRETURN\n\nDRAWALL:\nGOSUB DRAWCANVAS\nGOSUB DRAWCOLOR\nGOSUB DRAWPALETTE\nGOSUB DRAWPREVIEW\nRETURN\n\nDRAWING:\nIF UP(0) AND DY>0 THEN DY=DY-1\nIF DOWN(0) AND DY<7 THEN DY=DY+1\nIF LEFT(0) AND DX>0 THEN DX=DX-1\nIF RIGHT(0) AND DX<7 THEN DX=DX+1\nIF BUTTON(0,1) THEN\n  PXL(DX,DY)=COL\n  GOSUB DRAWPREVIEW\nEND IF\nGOSUB DRAWCANVAS\nRETURN\n\nDRAWCANVAS:\nCOLOR 6\nBOX OX-1,OY-1 TO OX+8*SC,OY+8*SC\nFOR Y=0 TO 7\n  FOR X=0 TO 7\n    C=PAL(PXL(X,Y))\n    COLOR C\n    TX=OX+X*SC\n    TY=OY+Y*SC\n    BAR TX,TY TO TX+SC-1, TY+SC-1\n    IF X=DX AND Y=DY AND BL AND MO=0 THEN\n      IF C=PAL(COL) THEN\n        IF C=1 THEN COLOR 2 ELSE COLOR 1\n      ELSE\n        COLOR PAL(COL)\n      END IF\n      BOX TX,TY TO TX+SC-1, TY+SC-1\n    END IF\n  NEXT X\nNEXT Y\nRETURN\n\nSELECTINGCOLOR:\nIF LEFT(0) THEN COL=(COL+3) MOD 4\nIF RIGHT(0) THEN COL=(COL+1) MOD 4\nIF BUTTON(0,1) THEN MO=0\nGOSUB DRAWCOLOR\nGOSUB DRAWPALETTE\nRETURN\n\nDRAWCOLOR:\nCOLOR 6\nBOX OX-1,OY+32 TO OX+8*SC,OY+33+SC\nFOR I=0 TO 3\n  C=PAL(I)\n  COLOR C\n  TX=OX+I*SC*2\n  TY=OY+33\n  BAR TX,TY TO TX+2*SC-1,TY+SC-1\n  IF I=COL AND (BL OR MO<>1) THEN\n    IF C=1 THEN COLOR 0 ELSE COLOR 1\n    BOX TX,TY TO TX+2*SC-1,TY+SC-1\n  END IF\nNEXT I\nRETURN\n\nSELECTINGPALETTE:\nIF LEFT(0) THEN PAL(COL)=(PAL(COL)+15) MOD 16\nIF RIGHT(0) THEN PAL(COL)=(PAL(COL)+1) MOD 16\nIF UP(0) THEN PAL(COL)=(PAL(COL)+14) MOD 16\nIF DOWN(0) THEN PAL(COL)=(PAL(COL)+2) MOD 16\nIF BUTTON(0,1) THEN MO=0\nGOSUB DRAWALL\nRETURN\n\nDRAWPALETTE:\nCOLOR 6\nBOX POX-1,POY-1 TO POX+8,POY+32\nC=0\nFOR Y=0 TO 7\n  FOR X=0 TO 1\n    TX=POX+X*4\n    TY=POY+Y*4\n    COLOR C\n    BAR TX,TY TO TX+3,TY+3\n    IF C=PAL(COL) AND (BL OR MO<>2) THEN\n      IF C=1 THEN COLOR 0 ELSE COLOR 1\n      BOX TX,TY TO TX+3,TY+3\n    END IF\n    C=C+1\n  NEXT X\nNEXT Y\nRETURN\n\nDRAWPREVIEW:\nCOLOR 6\nBOX PROX-1,PROY-1 TO PROX+8,PROY+8\nFOR Y=0 TO 7\n  FOR X=0 TO 7\n    COLOR PAL(PXL(X,Y))\n    PLOT PROX+X,PROY+Y\n  NEXT X\nNEXT Y\nRETURN\n\nSAVE:\nI=0\nB=0\nFOR Y=0 TO 7\n  FOR X=0 TO 7\n    B=B*4\n    B=B OR PXL(X,Y)\n    IF X=3 OR X=7 THEN\n      BYT(I)=B\n      I=I+1\n      B=0\n    END IF\n  NEXT X\nNEXT Y\nWRITE CLEAR\nWRITE DIM BYT,16\nWRITE DIM PAL\nCLS 6\nCOLOR 7\nTEXT 32,30,\"TRANSFERRED\",1\nWAIT 1\nRETURN\n\nLOAD:\nRESTORE TRANSFER\nFOR Y=0 TO 7\n  X=0\n  FOR A=0 TO 1\n    READ B\n    C=B\n    PXL(X,Y)=C\/64 AND 3\n    X=X+1\n    PXL(X,Y)=C\/16 AND 3\n    X=X+1\n    PXL(X,Y)=C\/4 AND 3\n    X=X+1\n    PXL(X,Y)=C AND 3\n    X=X+1\n  NEXT A\nNEXT Y\nREAD PAL(0),PAL(1),PAL(2),PAL(3)\nRETURN\n\nCLEARSPRITE:\nFOR Y=0 TO 7\n  FOR X=0 TO 7\n    PXL(X,Y)=0\n  NEXT X\nNEXT Y\nRETURN\n",
    "icon": "spritedesigner",
    "postId": "kqwmLtw8F5"
 },
 {
    "name": "Graphics",
    "sourceCode": "REM CLEAR SCREEN WITH SKY BLUE\nCLS 11\n\nREM GREEN GROUND\nCOLOR 9\nBAR 0,42 TO 63,63\n\nREM SOME DOTS ON THE GROUND\nCOLOR 10\nPLOT 10,60\nPLOT 22,50\nPLOT 28,55\nPLOT 40,48\nPLOT 48,58\nPLOT 55,51\n\nREM THE SUN\nCOLOR 8\nCIRCLE 50,5,4 PAINT\n\nREM MOUNTAINS IN THE BACKGROUND\nCOLOR 10\nLINE 0,20 TO 20,25\nLINE 20,25 TO 40,15\nLINE 40,15 TO 63,25\nPAINT 0,30\n\nREM THE WALLS OF A HOUSE\nCOLOR 1\nBAR 30,34 TO 44,45\nCOLOR 2\nBAR 45,34 TO 55,45\n\nREM THE ROOF\nCOLOR 4\nLINE 29,34 TO 37,26\nLINE 37,26 TO 45,34\nLINE 45,34 TO 56,34\nLINE 56,34 TO 48,26\nLINE 48,26 TO 37,26\nPAINT 50,30\n\nREM EXTEND THE FRONT WALL\nCOLOR 1\nPAINT 37,27\n\nREM THE DOOR AND WINDOWS\nCOLOR 6\nBOX 34,36 TO 40,45\nBOX 48,36 TO 52,40\nCIRCLE 37,30,1\n\nREM A TREE\nCOLOR 6\nBAR 10,34 TO 12,45\nCOLOR 9\nCIRCLE 11,29,8 PAINT",
    "icon": "graphics",
    "folder": "Simple Examples",
    "postId": "qA3M648GJV"
 },
 {
    "name": "Get and Put Block",
    "sourceCode": "CLS\n\nREM DRAW THREE ROUND FACES\n\nFOR I=0 TO 2\n  X=I*18\n  \n  REM DRAW EACH FACE IN A DIFFERENT COLOR\n  COLOR 7+I\n  CIRCLE X+8,8,7 PAINT\n  COLOR 5\n  CIRCLE X+8,8,8\n  CIRCLE X+5,6,2\n  PLOT X+5,6\n  CIRCLE X+11,6,2\n  PLOT X+11,6\n  LINE X+5,11 TO X+11,11\n  \n  REM COPY THE FACE\n  GET BLOCK I,X,0 TO X+16,16\nNEXT I\n\nWAIT 1\n\nREM DRAW THE COPIED FACE AT RANDOM POSITIONS\nREM TAP SCREEN TO SWITCH THE MASK ON OR OFF\n\nNOMASK:\nCLS\nDO\n  IF BUTTON TAP(0) THEN GOTO MASK\n  PUT BLOCK RND*3,RND*48,RND*48\n  WAIT 0.1\nLOOP\n\nMASK:\nCLS\nDO\n  IF BUTTON TAP(0) THEN GOTO NOMASK\n  PUT BLOCK RND*3,RND*48,RND*48,1\n  WAIT 0.1\nLOOP",
    "icon": "getandputblock",
    "folder": "Simple Examples",
    "postId": "BNh8GTHfeH"
 },
 {
    "name": "Scrolling with Layers",
    "sourceCode": "REM DRAW FOREGROUND\n\nLAYER 1\n\nCOLOR 4\nCIRCLE 31,31,16 PAINT\nCOLOR 8\nTEXT 31,29,\"LAYER 1\",1\n\nREM DRAW BACKGROUND\n\nLAYER 0\n\nREM FILL SCREEN WITH RANDOM PIXELS\nFOR Y=0 TO 63\n  FOR X=0 TO 63\n    COLOR RND*4+12\n    PLOT X,Y\n  NEXT X\nNEXT Y\n\nCOLOR 1\nTEXT 31,2,\"LAYER 0\",1\n\nDO\n  REM SCROLL UPPER PART TO THE RIGHT\n  SCROLL 0,10 TO 63,31,1,0\n  \n  REM REFILL LEFT PIXEL COLUMN\n  FOR Y=10 TO 31\n    COLOR RND*4+12\n    PLOT 0,Y\n  NEXT Y\n  \n  REM SCROLL LOWER PART TO THE LEFT\n  SCROLL 0,32 TO 63,53,-1,0\n  \n  REM REFILL RIGHT PIXEL COLUMN\n  FOR Y=32 TO 53\n    COLOR RND*4+12\n    PLOT 63,Y\n  NEXT Y\n  \n  WAIT 0.04\nLOOP",
    "icon": "scrollingwithlayers",
    "folder": "Simple Examples",
    "postId": "ei3i72tYj7"
 },
 {
    "name": "Colors",
    "sourceCode": "REM SHOWS THE DEFAULT COLOR PALETTE\n\nFOR A=0 TO 15\n  COLOR A\n  BAR A*4,0 TO A*4+3,63\nNEXT A\n",
    "icon": "colors",
    "folder": "Simple Examples",
    "postId": "TCVbeboPKt"
 },
 {
     "name": "Print and Input",
     "sourceCode": "PRINT \"WELCOME!\"\n\nREM ASK FOR NAME AND AGE (IN YEARS)\nINPUT \"NAME:\";NAME$\nINPUT \"AGE:\";YEARS\n\nREM SHOW SOME TEXT USING THE USER INPUT\nPRINT \"HELLO \"+NAME$+\"!\"\nPRINT \"YOU LIVE SINCE\"\nPRINT \"MORE THAN\"\nPRINT (YEARS*365)+\" DAYS :)\"",
     "icon": "printandinput",
     "folder": "Simple Examples",
     "postId": "yENfup9Ox0"
 },
 {
    "name": "Text",
    "sourceCode": "REM SET COLORS FOR PEN AND BACKGROUND\nCOLOR 1,14\n\nREM CLEAR SCREEN WITH BACKGROUND COLOR\nCLS\n\nREM ALIGNS\nTEXT 0,0,\"DEFAULT\"\nTEXT 32,6,\"CENTERED\",1\nTEXT 63,12,\"RIGHT\",2\n\nREM FONTS\nFONT 1\nTEXT 32,18,\"FONT 1\",1\nFONT 2\nTEXT 32,24,\"FONT 2\",1\nFONT 3\nTEXT 32,32,\"FONT 3\",1\n\nREM OUTLINES\nFONT 0\nREM SET BORDER COLOR\nCOLOR ,,15\nTEXT 1,42,\"SHADOW\",0,1\nTEXT 61,42,\"OUTLINE\",2,2\nTEXT 32,50,\"STRONG OUTLINE\",1,3\n",
    "icon": "text",
    "folder": "Simple Examples",
    "postId": "n7NU4EtyFG"
 },
 {
    "name": "Hello",
    "sourceCode": "REM SHOWS TEXT WITH EFFECT\n\nDO\n  CLS 0\n\n  REM DRAWS SOME PIXELS IN A LINE\n  COLOR 1\n  FOR A=1 TO 20\n    PLOT RND*64,31\n  NEXT\n\n  REM DRAWS TEXT WITH RANDOM COLOR\n  COLOR RND*16\n  TEXT 31,29,\"HELLO\",1\n\n  WAIT 0.1\nLOOP\n",
    "icon": "hello",
    "folder": "Simple Examples",
    "postId": "8HhHDiG0qE"
 },
 {
    "name": "Spaceship Sprite",
    "sourceCode": "REM READ SPRITE IMAGE DATA\nDIM ARR(15)\nFOR I=0 TO 15\n  READ ARR(I)\nNEXT I\nREAD C0,C1,C2,C3\nDEF SPRITE 0,ARR,C1,C2,C3\n\nREM ACTIVATE THE GAMEPAD\nGAMEPAD 1\n\nREM START POSITION ON SCREEN\nX=28\nY=28\n\nDO\n  REM CONTROL X AND Y WITH GAMEPAD\n  IF UP(0) AND Y>0 THEN Y=Y-1\n  IF DOWN(0) AND Y<56 THEN Y=Y+1\n  IF LEFT(0) AND X>0 THEN X=X-1\n  IF RIGHT(0) AND X<58 THEN X=X+1\n  \n  REM UPDATE THE SPRITE POSITION\n  SPRITE 0,X,Y,0\n  \n  WAIT 0.04\nLOOP\n\nREM THE SPRITE DATA, TRANSFERRED FROM EASY SPRITE DESIGNER\nDATA 5,0,5,0,5,0,15,0,69,16,85,80,85,80,74,16\nDATA 0,4,8,11",
    "icon": "spaceshipsprite",
    "folder": "Simple Examples",
    "postId": "Cjq4ddfDyP"
 },
 {
    "name": "Spaceship with Laser",
    "sourceCode": "REM READ DATA FOR TWO SPRITE IMAGES\nDIM ARR(15)\nFOR N=0 TO 1\n  FOR I=0 TO 15\n    READ ARR(I)\n  NEXT I\n  READ C0,C1,C2,C3\n  DEF SPRITE N,ARR,C1,C2,C3\nNEXT N\n\nREM ACTIVATE THE GAMEPAD\nGAMEPAD 1\n\nREM START POSITION ON SCREEN\nX=28\nY=48\n\nDO\n  REM CONTROL X AND Y WITH GAMEPAD\n  IF UP(0) AND Y>0 THEN Y=Y-1\n  IF DOWN(0) AND Y<56 THEN Y=Y+1\n  IF LEFT(0) AND X>0 THEN X=X-1\n  IF RIGHT(0) AND X<58 THEN X=X+1\n  \n  REM UPDATE SPACESHIP SPRITE POSITION\n  SPRITE 0,X,Y,0\n  \n  REM MOVE LASER SPRITE IF VISIBLE\n  IF SPRITE I(1) >= 0 THEN\n    SPRITE 1,,SPRITE Y(1)-8,\n    IF SPRITE Y(1) < -8 THEN SPRITE OFF 1\n  END IF\n  \n  REM SHOW LASER SPRITE WHEN BUTTON TAPPED\n  IF BUTTON TAP(0) THEN SPRITE 1,X+3,Y-7,1\n  \n  WAIT 0.04\nLOOP\n\nREM THE SPRITE DATA, TRANSFERRED FROM EASY SPRITE DESIGNER\nREM SPACESHIP\nDATA 5,0,5,0,5,0,15,0,69,16,85,80,85,80,74,16\nDATA 0,4,8,11\nREM LASER\nDATA 64,0,64,0,64,0,128,0,128,0,192,0,0,0,0,0\nDATA 0,8,7,6",
    "icon": "spaceshipwithlaser",
    "folder": "Simple Examples",
    "postId": "q838nsfjRk"
 },
 {
    "name": "Spaceship vs Aliens",
    "sourceCode": "REM READ DATA FOR THREE SPRITE IMAGES\nDIM ARR(15)\nFOR N=0 TO 2\n  FOR I=0 TO 15\n    READ ARR(I)\n  NEXT I\n  READ C0,C1,C2,C3\n  DEF SPRITE N,ARR,C1,C2,C3\nNEXT N\n\nREM ACTIVATE THE GAMEPAD\nGAMEPAD 1\n\nREM SPACESHIP START POSITION\nX=28\nY=48\n\nDO\n  REM CONTROL X AND Y WITH GAMEPAD\n  IF UP(0) AND Y>0 THEN Y=Y-1\n  IF DOWN(0) AND Y<56 THEN Y=Y+1\n  IF LEFT(0) AND X>0 THEN X=X-1\n  IF RIGHT(0) AND X<58 THEN X=X+1\n  \n  REM UPDATE SPACESHIP SPRITE POSITION\n  SPRITE 0,X,Y,0\n  \n  REM FLASHING SPACESHIP DRIVE\n  SPRITE PALETTE 0,,RND*16,\n  \n  REM MOVE ALIEN SPRITE\n  IF SPRITE I(10)=-1 OR SPRITE Y(10)>63 THEN\n    SPRITE 10,RND*56,-8,2\n  ELSE\n    SPRITE 10,,SPRITE Y(10)+1,\n  END IF\n  \n  REM CHECK FOR SPACESHIP COLLISION\n  IF SPRITE HIT(0) THEN\n    WAIT 1\n    SPRITE OFF\n    X=28\n    Y=48\n  END IF\n  \n  REM MOVE LASER IF VISIBLE, AND CHECK COLLISION\n  IF SPRITE I(1)>=0 THEN\n    SPRITE 1,,SPRITE Y(1)-8,\n    IF SPRITE HIT(1,10) THEN\n      SPRITE OFF 1\n      SPRITE OFF 10\n    END IF\n    IF SPRITE Y(1)<-8 THEN SPRITE OFF 1\n  END IF\n  \n  REM SHOW LASER IF BUTTON TAPPED\n  IF BUTTON TAP(0) THEN SPRITE 1,X+3,Y-7,1\n  \n  WAIT 0.04\nLOOP\n\nREM THE SPRITE DATA, TRANSFERRED FROM EASY SPRITE DESIGNER\nREM SPACESHIP\nDATA 5,0,5,0,5,0,15,0,69,16,85,80,85,80,74,16\nDATA 0,4,8,11\nREM LASER\nDATA 64,0,64,0,64,0,128,0,128,0,192,0,0,0,0,0\nDATA 0,8,7,6\nREM ALIEN\nDATA 80,5,164,26,6,144,2,128,1,64,21,84,208,7,240,15\nDATA 0,4,8,11",
    "icon": "spaceshipvsaliens",
    "folder": "Simple Examples",
    "postId": "NLsSsWj0tT"
 }
]